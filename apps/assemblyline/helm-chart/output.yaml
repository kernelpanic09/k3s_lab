---
# Source: assemblyline/templates/core-priorityclass.yaml
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  namespace: release-name
  name: al-service-priority
value: 0
globalDefault: false
description: "AL analysis services should be low priority and non-preempting."
---
# Source: assemblyline/templates/core-priorityclass.yaml
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  namespace: release-name
  name: al-core-priority
value: 10000
globalDefault: false
description: "AL core services have medium priority and preempt other services when needed."
---
# Source: assemblyline/templates/core-priorityclass.yaml
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  namespace: release-name
  name: al-infra
value: 100000
globalDefault: false
description: "High priority class for infrastructure containers"
---
# Source: assemblyline/templates/networkpolicy.yaml
# Allow all core pods to talk to other pods
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-between-core
  labels:
    app: assemblyline
spec:
  podSelector:
    matchLabels:
      section: core
  # Connections may come in from other core pods
  ingress:
  - from:
    - podSelector:
        matchLabels:
          section: core
  # Connections may go out to anywhere
  egress:
  - to: []
---
# Source: assemblyline/templates/networkpolicy.yaml
# Allow privileged services to reach core components
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-privileged-to-core
  labels:
    app: assemblyline
spec:
  podSelector:
    matchLabels:
      privilege: core
  egress:
  - to:
    - podSelector:
          matchLabels:
            section: core
---
# Source: assemblyline/templates/networkpolicy.yaml
# Allow Core components to recieve connection from privileged services
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-core-from-privileged
  labels:
    app: assemblyline
spec:
  podSelector:
    matchLabels:
      section: core
  ingress:
  - from:
    - podSelector:
          matchLabels:
            privilege: core
---
# Source: assemblyline/templates/networkpolicy.yaml
# Allow pods to access DNS
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-dns
  labels:
    app: assemblyline
spec:
  # For all pods in the given namespace
  podSelector:
    matchLabels:
  # Allow egress to the dns service in the system namespace
  egress:
  - ports:
      - port: 53
        protocol: UDP
      - port: 53
        protocol: TCP
#  - to:  # It would be better to use this more specific selection, but its not broadly supported
#    - namespaceSelector:
#        matchLabels:
#          name: kube-system
#      podSelector:
#        matchLabels:
#          k8s-app: kube-dns
---
# Source: assemblyline/templates/networkpolicy.yaml
# Allow all ingress traffic to Frontend/UI/UI-ingest/socket-io/service-api
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-into-endpoints
spec:
  # For the matched services
  podSelector:
    matchLabels:
      section: core
    matchExpressions:
    - key: component
      operator: In
      values:  [frontend, ui, socketio, service-server] 
  # Allow ingress from all sources, regardless of origin
  ingress:
  - from: []
---
# Source: assemblyline/templates/networkpolicy.yaml
# Allow all ingress traffic to logstash
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-into-logstash
spec:
  # For the matched services
  podSelector:
    matchLabels:
      component: logstash
      section: core
  # Allow ingress from all sources, regardless of origin
  ingress:
  - from: []
---
# Source: assemblyline/templates/networkpolicy.yaml
# services to contact the service-server
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-service-api
spec:
  # For all pods in the service namespace
  podSelector:
    matchLabels:
      section: service
  # Allow traffic to
  egress:
  - to:
    - podSelector:
        matchLabels:
          section: core
          component: service-server
---
# Source: assemblyline/templates/networkpolicy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: release-name-allow-state-metrics
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: kube-state-metrics
  egress:
  - to: []
---
# Source: assemblyline/templates/networkpolicy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: release-name-allow-metricbeat-daemon
spec:
  podSelector:
    matchLabels:
      app: release-name-metricbeat-metrics
  egress:
  - to: []
---
# Source: assemblyline/templates/networkpolicy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-metrics-output
spec:
  podSelector:
    matchLabels:
      section: core
      component: metrics
  egress:
  - to: []
---
# Source: assemblyline/templates/networkpolicy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-logstash-output
spec:
  podSelector:
    matchLabels:
      section: core
      component: logstash
  egress:
  - to: []
---
# Source: assemblyline/templates/networkpolicy.yaml
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-metricbeat-to-core
  labels:
    app: assemblyline
spec:
  podSelector:
    matchLabels:
      section: core
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: release-name-metricbeat-metrics
---
# Source: assemblyline/templates/networkpolicy.yaml
# Allow all traffic inbound to kibana
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: allow-into-kibana
spec:
  podSelector:
    matchLabels:
      section: core
      app: kibana
  ingress:
  - from: []
---
# Source: assemblyline/charts/elasticsearch/templates/poddisruptionbudget.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: "elasticsearch-master-pdb"
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: "elasticsearch-master"
---
# Source: assemblyline/charts/filestore/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "minio-sa"
---
# Source: assemblyline/templates/service-accounts.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-scaling-manager
  labels:
    app: assemblyline
  annotations:
---
# Source: assemblyline/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: internal-filestore-keys
  annotations:
    helm.sh/resource-policy: keep
type: Opaque
stringData:
  accesskey: kJiz40vEVS5Wvlq2
  secretkey: cIDj8f9Vglzuecuo
---
# Source: assemblyline/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: elastic-helper-secret
data:
  password: ZG5MbEphNmFaODdiY1hURFNjOFA=
---
# Source: assemblyline/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: flask-secret
data:
  password: RWRNbUpaYmxYT2VHYjZDazFTeVR6YjBteWpBN3RiaDZHOUpTZ2NBUlFMaTd6b0kwQTVnRWdnUnk5d2F6MXhUY3BEOHFPVkdralR4UUZPbVI=
---
# Source: assemblyline/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: retrohunt-secret
data:
  password: cklaN3d1SU50ZkpseGZJZ1hwN3NsVElaeUNwa1NNQ3Z0Z2dzbEtBSVlSMFU0RENVQloyQTJldWtPYlRSdTBOUlBPc3g2SE9lVDhpTGl1dTc=
---
# Source: assemblyline/charts/filestore/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: filestore
  labels:
    app: filestore
    chart: filestore-5.0.10
    release: release-name
    heritage: Helm
data:
  initialize: |-
    #!/bin/sh
    set -e ; # Have script exit in the event of a failed command.
    MC_CONFIG_DIR="/etc/minio/mc/"
    MC="/usr/bin/mc --insecure --config-dir ${MC_CONFIG_DIR}"
    
    # connectToMinio
    # Use a check-sleep-check loop to wait for MinIO service to be available
    connectToMinio() {
      SCHEME=$1
      ATTEMPTS=0 ; LIMIT=29 ; # Allow 30 attempts
      set -e ; # fail if we can't read the keys.
      ACCESS=$(cat /config/rootUser) ; SECRET=$(cat /config/rootPassword) ;
      set +e ; # The connections to minio are allowed to fail.
      echo "Connecting to MinIO server: $SCHEME://$MINIO_ENDPOINT:$MINIO_PORT" ;
      MC_COMMAND="${MC} alias set myminio $SCHEME://$MINIO_ENDPOINT:$MINIO_PORT $ACCESS $SECRET" ;
      $MC_COMMAND ;
      STATUS=$? ;
      until [ $STATUS = 0 ]
      do
        ATTEMPTS=`expr $ATTEMPTS + 1` ;
        echo \"Failed attempts: $ATTEMPTS\" ;
        if [ $ATTEMPTS -gt $LIMIT ]; then
          exit 1 ;
        fi ;
        sleep 2 ; # 1 second intervals between attempts
        $MC_COMMAND ;
        STATUS=$? ;
      done ;
      set -e ; # reset `e` as active
      return 0
    }
    
    # checkBucketExists ($bucket)
    # Check if the bucket exists, by using the exit code of `mc ls`
    checkBucketExists() {
      BUCKET=$1
      CMD=$(${MC} stat myminio/$BUCKET > /dev/null 2>&1)
      return $?
    }
    
    # createBucket ($bucket, $policy, $purge)
    # Ensure bucket exists, purging if asked to
    createBucket() {
      BUCKET=$1
      POLICY=$2
      PURGE=$3
      VERSIONING=$4
      OBJECTLOCKING=$5
    
      # Purge the bucket, if set & exists
      # Since PURGE is user input, check explicitly for `true`
      if [ $PURGE = true ]; then
        if checkBucketExists $BUCKET ; then
          echo "Purging bucket '$BUCKET'."
          set +e ; # don't exit if this fails
          ${MC} rm -r --force myminio/$BUCKET
          set -e ; # reset `e` as active
        else
          echo "Bucket '$BUCKET' does not exist, skipping purge."
        fi
      fi
    
    # Create the bucket if it does not exist and set objectlocking if enabled (NOTE: versioning will be not changed if OBJECTLOCKING is set because it enables versioning to the Buckets created)
    if ! checkBucketExists $BUCKET ; then
        if [ ! -z $OBJECTLOCKING ] ; then
          if [ $OBJECTLOCKING = true ] ; then
              echo "Creating bucket with OBJECTLOCKING '$BUCKET'"
              ${MC} mb --with-lock myminio/$BUCKET
          elif [ $OBJECTLOCKING = false ] ; then
                echo "Creating bucket '$BUCKET'"
                ${MC} mb myminio/$BUCKET
          fi
      elif [ -z $OBJECTLOCKING ] ; then
            echo "Creating bucket '$BUCKET'"
            ${MC} mb myminio/$BUCKET
      else
        echo "Bucket '$BUCKET' already exists."  
      fi
      fi
    
    
      # set versioning for bucket if objectlocking is disabled or not set
      if [ -z $OBJECTLOCKING ] ; then
      if [ ! -z $VERSIONING ] ; then
        if [ $VERSIONING = true ] ; then
            echo "Enabling versioning for '$BUCKET'"
            ${MC} version enable myminio/$BUCKET
        elif [ $VERSIONING = false ] ; then
            echo "Suspending versioning for '$BUCKET'"
            ${MC} version suspend myminio/$BUCKET
        fi
        fi
      else
          echo "Bucket '$BUCKET' versioning unchanged."
      fi
    
    
      # At this point, the bucket should exist, skip checking for existence
      # Set policy on the bucket
      echo "Setting policy of bucket '$BUCKET' to '$POLICY'."
      ${MC} anonymous set $POLICY myminio/$BUCKET
    }
    
    # Try connecting to MinIO instance
    scheme=http
    connectToMinio $scheme
    
    
    
  add-user: |-
    #!/bin/sh
    set -e ; # Have script exit in the event of a failed command.
    MC_CONFIG_DIR="/etc/minio/mc/"
    MC="/usr/bin/mc --insecure --config-dir ${MC_CONFIG_DIR}"
    
    # AccessKey and secretkey credentials file are added to prevent shell execution errors caused by special characters.
    # Special characters for example : ',",<,>,{,}
    MINIO_ACCESSKEY_SECRETKEY_TMP="/tmp/accessKey_and_secretKey_tmp"
    
    # connectToMinio
    # Use a check-sleep-check loop to wait for MinIO service to be available
    connectToMinio() {
      SCHEME=$1
      ATTEMPTS=0 ; LIMIT=29 ; # Allow 30 attempts
      set -e ; # fail if we can't read the keys.
      ACCESS=$(cat /config/rootUser) ; SECRET=$(cat /config/rootPassword) ;
      set +e ; # The connections to minio are allowed to fail.
      echo "Connecting to MinIO server: $SCHEME://$MINIO_ENDPOINT:$MINIO_PORT" ;
      MC_COMMAND="${MC} alias set myminio $SCHEME://$MINIO_ENDPOINT:$MINIO_PORT $ACCESS $SECRET" ;
      $MC_COMMAND ;
      STATUS=$? ;
      until [ $STATUS = 0 ]
      do
        ATTEMPTS=`expr $ATTEMPTS + 1` ;
        echo \"Failed attempts: $ATTEMPTS\" ;
        if [ $ATTEMPTS -gt $LIMIT ]; then
          exit 1 ;
        fi ;
        sleep 2 ; # 1 second intervals between attempts
        $MC_COMMAND ;
        STATUS=$? ;
      done ;
      set -e ; # reset `e` as active
      return 0
    }
    
    # checkUserExists ()
    # Check if the user exists, by using the exit code of `mc admin user info`
    checkUserExists() {
      CMD=$(${MC} admin user info myminio $(head -1 $MINIO_ACCESSKEY_SECRETKEY_TMP) > /dev/null 2>&1)
      return $?
    }
    
    # createUser ($policy)
    createUser() {
      POLICY=$1
      #check accessKey_and_secretKey_tmp file
      if [[ ! -f $MINIO_ACCESSKEY_SECRETKEY_TMP ]];then
        echo "credentials file does not exist"
        return 1
      fi
      if [[ $(cat $MINIO_ACCESSKEY_SECRETKEY_TMP|wc -l) -ne 2 ]];then
        echo "credentials file is invalid"
        rm -f $MINIO_ACCESSKEY_SECRETKEY_TMP
        return 1
      fi
      USER=$(head -1 $MINIO_ACCESSKEY_SECRETKEY_TMP)
      # Create the user if it does not exist
      if ! checkUserExists ; then
        echo "Creating user '$USER'"
        cat $MINIO_ACCESSKEY_SECRETKEY_TMP | ${MC} admin user add myminio
      else
        echo "User '$USER' already exists."
      fi
      #clean up credentials files.
      rm -f $MINIO_ACCESSKEY_SECRETKEY_TMP
    
      # set policy for user
      if [ ! -z $POLICY -a $POLICY != " " ] ; then
          echo "Adding policy '$POLICY' for '$USER'"
          set +e ; # policy already attach errors out, allow it.
          ${MC} admin policy attach myminio $POLICY --user=$USER
          set -e
      else
          echo "User '$USER' has no policy attached."
      fi
    }
    
    # Try connecting to MinIO instance
    scheme=http
    connectToMinio $scheme
    
    
    
    # Create the users
    echo console > $MINIO_ACCESSKEY_SECRETKEY_TMP
    echo console123 >> $MINIO_ACCESSKEY_SECRETKEY_TMP
    createUser consoleAdmin
    
  add-policy: |-
    #!/bin/sh
    set -e ; # Have script exit in the event of a failed command.
    MC_CONFIG_DIR="/etc/minio/mc/"
    MC="/usr/bin/mc --insecure --config-dir ${MC_CONFIG_DIR}"
    
    # connectToMinio
    # Use a check-sleep-check loop to wait for MinIO service to be available
    connectToMinio() {
      SCHEME=$1
      ATTEMPTS=0 ; LIMIT=29 ; # Allow 30 attempts
      set -e ; # fail if we can't read the keys.
      ACCESS=$(cat /config/rootUser) ; SECRET=$(cat /config/rootPassword) ;
      set +e ; # The connections to minio are allowed to fail.
      echo "Connecting to MinIO server: $SCHEME://$MINIO_ENDPOINT:$MINIO_PORT" ;
      MC_COMMAND="${MC} alias set myminio $SCHEME://$MINIO_ENDPOINT:$MINIO_PORT $ACCESS $SECRET" ;
      $MC_COMMAND ;
      STATUS=$? ;
      until [ $STATUS = 0 ]
      do
        ATTEMPTS=`expr $ATTEMPTS + 1` ;
        echo \"Failed attempts: $ATTEMPTS\" ;
        if [ $ATTEMPTS -gt $LIMIT ]; then
          exit 1 ;
        fi ;
        sleep 2 ; # 1 second intervals between attempts
        $MC_COMMAND ;
        STATUS=$? ;
      done ;
      set -e ; # reset `e` as active
      return 0
    }
    
    # checkPolicyExists ($policy)
    # Check if the policy exists, by using the exit code of `mc admin policy info`
    checkPolicyExists() {
      POLICY=$1
      CMD=$(${MC} admin policy info myminio $POLICY > /dev/null 2>&1)
      return $?
    }
    
    # createPolicy($name, $filename)
    createPolicy () {
      NAME=$1
      FILENAME=$2
    
      # Create the name if it does not exist
      echo "Checking policy: $NAME (in /config/$FILENAME.json)"
      if ! checkPolicyExists $NAME ; then
        echo "Creating policy '$NAME'"
      else
        echo "Policy '$NAME' already exists."
      fi
      ${MC} admin policy create myminio $NAME /config/$FILENAME.json
    
    }
    
    # Try connecting to MinIO instance
    scheme=http
    connectToMinio $scheme
    
    
    
  add-svcacct: |-
    #!/bin/sh
    set -e ; # Have script exit in the event of a failed command.
    MC_CONFIG_DIR="/etc/minio/mc/"
    MC="/usr/bin/mc --insecure --config-dir ${MC_CONFIG_DIR}"
    
    # AccessKey and secretkey credentials file are added to prevent shell execution errors caused by special characters.
    # Special characters for example : ',",<,>,{,}
    MINIO_ACCESSKEY_SECRETKEY_TMP="/tmp/accessKey_and_secretKey_svcacct_tmp"
    
    # connectToMinio
    # Use a check-sleep-check loop to wait for MinIO service to be available
    connectToMinio() {
      SCHEME=$1
      ATTEMPTS=0 ; LIMIT=29 ; # Allow 30 attempts
      set -e ; # fail if we can't read the keys.
      ACCESS=$(cat /config/rootUser) ; SECRET=$(cat /config/rootPassword) ;
      set +e ; # The connections to minio are allowed to fail.
      echo "Connecting to MinIO server: $SCHEME://$MINIO_ENDPOINT:$MINIO_PORT" ;
      MC_COMMAND="${MC} alias set myminio $SCHEME://$MINIO_ENDPOINT:$MINIO_PORT $ACCESS $SECRET" ;
      $MC_COMMAND ;
      STATUS=$? ;
      until [ $STATUS = 0 ]
      do
        ATTEMPTS=`expr $ATTEMPTS + 1` ;
        echo \"Failed attempts: $ATTEMPTS\" ;
        if [ $ATTEMPTS -gt $LIMIT ]; then
          exit 1 ;
        fi ;
        sleep 2 ; # 2 second intervals between attempts
        $MC_COMMAND ;
        STATUS=$? ;
      done ;
      set -e ; # reset `e` as active
      return 0
    }
    
    # checkSvcacctExists ()
    # Check if the svcacct exists, by using the exit code of `mc admin user svcacct info`
    checkSvcacctExists() {
      CMD=$(${MC} admin user svcacct info myminio $(head -1 $MINIO_ACCESSKEY_SECRETKEY_TMP) > /dev/null 2>&1)
      return $?
    }
    
    # createSvcacct ($user)
    createSvcacct () {
      USER=$1
      FILENAME=$2
      #check accessKey_and_secretKey_tmp file
      if [[ ! -f $MINIO_ACCESSKEY_SECRETKEY_TMP ]];then
        echo "credentials file does not exist"
        return 1
      fi
      if [[ $(cat $MINIO_ACCESSKEY_SECRETKEY_TMP|wc -l) -ne 2 ]];then
        echo "credentials file is invalid"
        rm -f $MINIO_ACCESSKEY_SECRETKEY_TMP
        return 1
      fi
      SVCACCT=$(head -1 $MINIO_ACCESSKEY_SECRETKEY_TMP)
      # Create the svcacct if it does not exist
      if ! checkSvcacctExists ; then
        echo "Creating svcacct '$SVCACCT'"
        # Check if policy file is define
        if [ -z $FILENAME ]; then
          ${MC} admin user svcacct add --access-key $(head -1 $MINIO_ACCESSKEY_SECRETKEY_TMP) --secret-key $(tail -n1 $MINIO_ACCESSKEY_SECRETKEY_TMP) myminio $USER
        else
          ${MC} admin user svcacct add --access-key $(head -1 $MINIO_ACCESSKEY_SECRETKEY_TMP) --secret-key $(tail -n1 $MINIO_ACCESSKEY_SECRETKEY_TMP) --policy /config/$FILENAME.json myminio $USER
        fi
      else
        echo "Svcacct '$SVCACCT' already exists."
      fi
      #clean up credentials files.
      rm -f $MINIO_ACCESSKEY_SECRETKEY_TMP
    }
    
    # Try connecting to MinIO instance
    scheme=http
    connectToMinio $scheme
    
    
    
  custom-command: |-
    #!/bin/sh
    set -e ; # Have script exit in the event of a failed command.
    MC_CONFIG_DIR="/etc/minio/mc/"
    MC="/usr/bin/mc --insecure --config-dir ${MC_CONFIG_DIR}"
    
    # connectToMinio
    # Use a check-sleep-check loop to wait for MinIO service to be available
    connectToMinio() {
      SCHEME=$1
      ATTEMPTS=0 ; LIMIT=29 ; # Allow 30 attempts
      set -e ; # fail if we can't read the keys.
      ACCESS=$(cat /config/rootUser) ; SECRET=$(cat /config/rootPassword) ;
      set +e ; # The connections to minio are allowed to fail.
      echo "Connecting to MinIO server: $SCHEME://$MINIO_ENDPOINT:$MINIO_PORT" ;
      MC_COMMAND="${MC} alias set myminio $SCHEME://$MINIO_ENDPOINT:$MINIO_PORT $ACCESS $SECRET" ;
      $MC_COMMAND ;
      STATUS=$? ;
      until [ $STATUS = 0 ]
      do
        ATTEMPTS=`expr $ATTEMPTS + 1` ;
        echo \"Failed attempts: $ATTEMPTS\" ;
        if [ $ATTEMPTS -gt $LIMIT ]; then
          exit 1 ;
        fi ;
        sleep 2 ; # 1 second intervals between attempts
        $MC_COMMAND ;
        STATUS=$? ;
      done ;
      set -e ; # reset `e` as active
      return 0
    }
    
    # runCommand ($@)
    # Run custom mc command
    runCommand() {
      ${MC} "$@"
      return $?
    }
    
    # Try connecting to MinIO instance
    scheme=http
    connectToMinio $scheme
---
# Source: assemblyline/charts/kibana/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kibana-config
  labels: 
    app: kibana
    release: "release-name"
    heritage: Helm
    section: core
data:
  kibana.yml: |
    elasticsearch:
      hosts: ['${ELASTICSEARCH_HOSTS}']
      serviceAccountToken: '${ELASTICSEARCH_SERVICEACCOUNTTOKEN}'
    # Below configurations are used when `enableInternalEncryption: true`
    #   ssl.certificateAuthorities: '${ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES:[]}'
    # server.ssl:
    #   enabled: true
    #   certificate: /etc/certs/kibana/tls.crt
    #   key: /etc/certs/kibana/tls.key
    #   certificateAuthorities: /etc/certs/ca.crt
---
# Source: assemblyline/templates/configmaps.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: elasticsearch-indexes
data:
  elastic-alert-shards: "2"
  elastic-default-replicas: "1"
  elastic-default-shards: "1"
  elastic-emptyresult-shards: "4"
  elastic-file-shards: "4"
  elastic-filescore-shards: "4"
  elastic-result-shards: "18"
  elastic-safelist-shards: "4"
  elastic-submission-shards: "6"
---
# Source: assemblyline/templates/configmaps.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: system-settings
data:
  datastore-ssl-enabled: "false"
  datastore-ssl-key: ''
  datastore-ssl-cert: ''
  logging-host: log-storage-master:9200
  logging-username: elastic
  logging-tls-verify: full
  logging-ssl-enabled: "false"
  logging-ssl-key: ''
  logging-ssl-cert: ''
  logging-ca: ''
  logging-protocol: "http"
  metricbeat-index-prefix: metricbeat
---
# Source: assemblyline/templates/configmaps.yaml
# The assemblyline config that will be projected into all the assemblyline pods
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-global-config
data:
  config: |
    core:
      alerter:
        delay: 0
      dispatcher:
        max_inflight: 10000
      ingester:
        max_inflight: 6000
      metrics:
        apm_server:
          server_url: http://apm:8200
        elasticsearch:
          hosts:
          - http://${LOGGING_USERNAME}:${LOGGING_PASSWORD}@${LOGGING_HOST}
        redis:
          host: redis-volatile
          port: 6379
      redis:
        nonpersistent:
          host: redis-volatile
          port: 6379
        persistent:
          host: redis-persistent
          port: 6379
      scaler:
        cluster_pod_list: true
        enable_pod_security: false
        service_defaults:
          backlog: 10
          environment:
          - name: SERVICE_API_HOST
            value: http://service-server:5003
          growth: 30
          min_instances: 1
          shrink: 10
    datastore:
      archive:
        enabled: false
      hosts:
      - http://elastic:${ELASTIC_PASSWORD}@datastore-master:9200
    filestore:
      archive: []
      cache:
      - s3://${INTERNAL_FILESTORE_ACCESS}:${INTERNAL_FILESTORE_KEY}@filestore:9000?s3_bucket=al-cache&use_ssl=False
      storage:
      - s3://${INTERNAL_FILESTORE_ACCESS}:${INTERNAL_FILESTORE_KEY}@filestore:9000?s3_bucket=al-storage&use_ssl=False
    logging:
      log_level: INFO
      log_to_console: true
      log_to_file: false
      log_to_syslog: false
    retrohunt:
      api_key: ${RETROHUNT_API_KEY}
      enabled: false
      tls_verify: ${ENABLE_INTERNAL_ENCRYPTION}
      url: https://hauntedhouse:4443
    services:
      cpu_reservation: 0.6
    submission:
      max_file_size: 104857600
    ui:
      fqdn: al.codepretzels.com
      secret_key: ${FLASK_SECRET_KEY}
---
# Source: assemblyline/templates/configmaps.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-bootstrap-script
data:
  bootstrap.py: |
    from assemblyline.odm.models.user_settings import UserSettings
    from assemblyline.common.security import get_password_hash
    from assemblyline.odm.models.user import User
    from assemblyline.common import forge
    import os

    ADMIN_USER = 'admin'
    INITIAL_ADMIN_PASSWORD = os.environ['INITIAL_ADMIN_PASSWORD']
    Classification = forge.get_classification()

    if __name__ == '__main__':
        ds = forge.get_datastore()
        if not ds.user.get_if_exists(ADMIN_USER):
            user_data = User({
                "agrees_with_tos": "NOW",
                "classification": Classification.RESTRICTED,
                "name": "Administrator",
                "password": get_password_hash(INITIAL_ADMIN_PASSWORD),
                "uname": ADMIN_USER,
                "type": [ADMIN_USER, "user", "signature_importer"]})
            ds.user.save(ADMIN_USER, user_data)
            ds.user_settings.save(ADMIN_USER, UserSettings())
            print("Initial user setup finished.")
        else:
            print(f"User {ADMIN_USER} already found, system is already setup.")
  share_certificate.py: |
    import os
    import logging
    from flask import Flask, request, abort

    app = Flask(__name__)

    FILES = {
        'elastic-certificates.p12': '/data/elastic-certificates.p12',
        'elastic-stack-ca.p12': '/data/elastic-stack-ca.p12'
    }

    @app.route("/<filename>")
    def read_file(filename):
        if request.headers.get('Authorization', '') != 'Bearer ' + os.environ['SECRET_KEY']:
            abort(401, 'token refused')

        if filename not in FILES:
            abort(404)

        return open(FILES[filename], 'rb').read()

    if __name__ == "__main__":
        logging.basicConfig(level=logging.INFO)
        app.run(ssl_context='adhoc', host='0.0.0.0', port=8000)
---
# Source: assemblyline/templates/configmaps.yaml
# The ConfigMap to initialize service account for Kibana
apiVersion: v1
kind: ConfigMap
metadata:
  name: init-kibana-token
data:
  create_serviceaccount_token.py: |
    import os
    import requests
    from datetime import datetime
    from kubernetes import client, config
    from kubernetes.client import V1Secret, V1ObjectMeta

    if __name__ == "__main__":
      # Try loading a kubernetes connection from either the fact that we are running
      # inside of a cluster, or have a config file that tells us how
      try:
          config.load_incluster_config()
      except config.config_exception.ConfigException:
          # Load the configuration once to initialize the defaults
          config.load_kube_config()
          # Now we can actually apply any changes we want to make
          cfg = client.configuration.Configuration(client.configuration.Configuration)
          if 'HTTPS_PROXY' in os.environ:
              cfg.proxy = os.environ['HTTPS_PROXY']
              if not cfg.proxy.startswith("http"):
                  cfg.proxy = "https://" + cfg.proxy
              client.Configuration.set_default(cfg)
          # Load again with our settings set
          config.load_kube_config(client_configuration=cfg)

      base = os.environ['LOGGING_BASEURL']
      auth = (os.environ['LOGGING_USERNAME'], os.environ['LOGGING_PASSWORD'])
      verify = "/etc/assemblyline/ssl/al_root-ca.crt" if os.path.exists("/etc/assemblyline/ssl/al_root-ca.crt") else True
      # Delete existing token 
      requests.delete(f"{base}/_security/service/elastic/kibana/credential/token/kibana", auth=auth, verify=verify)
      # Create a new token 
      resp = requests.post(f"{base}/_security/service/elastic/kibana/credential/token/kibana", auth=auth, verify=verify).json()
      core_api = client.CoreV1Api()
      core_api.patch_namespaced_secret(name="kibana-service-token", namespace=os.getenv('NAMESPACE', 'al'), body=V1Secret(metadata=V1ObjectMeta(name="kibana-service-token"), string_data={"token": resp['token']['value']}))
      # Restart Kibana deployment
      now = datetime.utcnow()
      now = str(now.isoformat("T") + "Z")      
      body = {
          'spec': {
              'template':{
                  'metadata': {
                      'annotations': {
                          'kubectl.kubernetes.io/restartedAt': now
                      }
                  }
              }
          }
      }      
      client.AppsV1Api().patch_namespaced_deployment("kibana", namespace=os.getenv('NAMESPACE', 'al'), body=body, pretty='true')
---
# Source: assemblyline/templates/service-accounts.yaml
# This role combines all permissions needed for the scaling-manager SA at the cluster level (used by updater and scaler components)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-scaling-manager-cluster-role
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["watch"]

- apiGroups: [""]
  resources: ["pods",]
  verbs: ["watch"]
---
# Source: assemblyline/templates/service-accounts.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-scaling-manager-cluster-role
subjects:
- kind: ServiceAccount
  name: release-name-scaling-manager
  namespace: default
roleRef:
  kind: ClusterRole
  name: release-name-scaling-manager-cluster-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: assemblyline/templates/service-accounts.yaml
# This role combines all permissions needed for the scaling-manager SA at the namespace level (used by updater and scaler components)
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-name-scaling-manager-role
rules:
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["create", "delete", "get", "list", "patch", "update", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments/scale"]
  verbs: ["get", "patch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["create", "delete", "get", "list"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["networking.k8s.io"]
  resources: ["networkpolicies"]
  verbs: ["create", "delete", "list", "patch"]
- apiGroups: [""]
  resources: ["persistentvolumeclaims"]
  verbs: ["create", "delete", "list"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "delete", "get", "watch"]
- apiGroups: [""]
  resources: ["resourcequotas"]
  verbs: ["watch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "create", "patch", "update", "delete"]
- apiGroups: [""]
  resources: ["services"]
  verbs: ["create", "get", "patch"]
---
# Source: assemblyline/templates/service-accounts.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-scaling-manager-role
subjects:
  - kind: ServiceAccount
    name: release-name-scaling-manager
    namespace: default
roleRef:
  kind: Role
  name: release-name-scaling-manager-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: assemblyline/charts/elasticsearch/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: elasticsearch-master
  labels:
    heritage: "Helm"
    release: "release-name"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  annotations:
    {}
spec:
  type: ClusterIP
  selector:
    release: "release-name"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  publishNotReadyAddresses: false
  ports:
  - name: http
    protocol: TCP
    port: 9200
  - name: transport
    protocol: TCP
    port: 9300
---
# Source: assemblyline/charts/elasticsearch/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: elasticsearch-master-headless
  labels:
    heritage: "Helm"
    release: "release-name"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  clusterIP: None # This is needed for statefulset hostnames like elasticsearch-0 to resolve
  # Create endpoints also if the related pod isn't ready
  publishNotReadyAddresses: true
  selector:
    app: "elasticsearch-master"
  ports:
  - name: http
    port: 9200
  - name: transport
    port: 9300
---
# Source: assemblyline/charts/filestore/templates/console-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: filestore-console
  labels:
    app: filestore
    chart: filestore-5.0.10
    release: release-name
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 9001
      protocol: TCP
      targetPort: 9001
  selector:
    app: filestore
    release: release-name
---
# Source: assemblyline/charts/filestore/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: filestore
  labels:
    app: filestore
    chart: filestore-5.0.10
    release: release-name
    heritage: Helm
    monitoring: "true"
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 9000
      protocol: TCP
      targetPort: 9000
  selector:
    app: filestore
    release: release-name
---
# Source: assemblyline/charts/filestore/templates/statefulset.yaml
apiVersion: v1
kind: Service
metadata:
  name: filestore-svc
  labels:
    app: filestore
    chart: filestore-5.0.10
    release: release-name
    heritage: Helm
spec:
  publishNotReadyAddresses: true
  clusterIP: None
  ports:
    - name: http
      port: 9000
      protocol: TCP
      targetPort: 9000
  selector:
    app: filestore
    release: release-name
---
# Source: assemblyline/charts/kibana/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kibana
  labels: 
    app: kibana
    release: "release-name"
    heritage: Helm
    section: core
    section: core
spec:
  type: ClusterIP
  ports:
    - port: 5601
      protocol: TCP
      name: http
      targetPort: 5601
  selector:
    app: kibana
    release: "release-name"
---
# Source: assemblyline/templates/elastic-helper-services.yaml
apiVersion: v1
kind: Service
metadata:
  name: elastic-helper
  labels:
    app: assemblyline
    section: core
    component: elastic-helper
spec:
  clusterIP: None
  selector:
    app: assemblyline
    section: core
    component: elastic-helper
  ports:
  - protocol: TCP
    port: 8000
    targetPort: 8000
---
# Source: assemblyline/templates/redis.yaml
apiVersion: v1
kind: Service
metadata:
  name: redis-volatile
  labels:
    app: assemblyline
    section: core
    component: redis-volatile
spec:
  clusterIP: None
  selector:
    app: assemblyline
    section: core
    component: redis-volatile
  ports:
  - protocol: TCP
    port: 6379
---
# Source: assemblyline/templates/redis.yaml
# Create a StatefulSet/Service for persistent redis
apiVersion: v1
kind: Service
metadata:
  name: redis-persistent
  labels:
    app: assemblyline
    section: core
    component: redis-persistent
spec:
  clusterIP: None
  selector:
    app: assemblyline
    section: core
    component: redis-persistent
  ports:
  - protocol: TCP
    port: 6379
---
# Source: assemblyline/templates/service-server-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: service-server
  labels:
    app: assemblyline
    section: core
    component: service-server
spec:
  clusterIP: None
  selector:
    app: assemblyline
    section: core
    component: service-server
  ports:
  - protocol: TCP
    port: 5003
    targetPort: 5003
---
# Source: assemblyline/templates/ui.yaml
apiVersion: v1
kind: Service
metadata:
  name: ui
  labels:
    app: assemblyline
    section: core
    component: ui
spec:
  clusterIP: None
  selector:
    app: assemblyline
    section: core
    component: ui
  ports:
  - protocol: TCP
    port: 5000
    targetPort: 5000
  sessionAffinity: ClientIP
---
# Source: assemblyline/templates/ui.yaml
apiVersion: v1
kind: Service
metadata:
  name: socketio
  labels:
    app: assemblyline
    section: core
    component: socketio
spec:
  clusterIP: None
  selector:
    app: assemblyline
    section: core
    component: socketio
  ports:
  - protocol: TCP
    port: 5002
    targetPort: 5002
---
# Source: assemblyline/templates/ui.yaml
apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: assemblyline
    section: core
    component: frontend
spec:
  clusterIP: None
  selector:
    app: assemblyline
    section: core
    component: frontend
  ports:
  - protocol: TCP
    port: 3000
    targetPort: 3000
---
# Source: assemblyline/charts/kibana/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  labels: 
    app: kibana
    release: "release-name"
    heritage: Helm
    section: core
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: kibana
      release: "release-name"
  template:
    metadata:
      labels:
        app: kibana
        release: "release-name"
        section: "core"
      annotations:
        
        configchecksum: d5c5864a18221213516484c6bbc3dbefdb8205ca8027d83d176029d62af921f
    spec:
      automountServiceAccountToken: true
      priorityClassName: al-core-priority
      securityContext:
        fsGroup: 1000
      volumes:
        - name: kibanaconfig
          configMap:
            name: kibana-config
      containers:
      - name: kibana
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1000
        image: "docker.elastic.co/kibana/kibana:8.10.2"
        imagePullPolicy: "IfNotPresent"
        env:
          - name: ELASTICSEARCH_HOSTS
            value: "http://log-storage-master:9200"
          - name: SERVER_HOST
            value: "0.0.0.0"
          - name: SERVER_NAME
            value: localhost
          - name: ELASTICSEARCH_SERVICEACCOUNTTOKEN
            valueFrom:
              secretKeyRef:
                key: token
                name: kibana-service-token
          - name: ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES
            valueFrom:
              configMapKeyRef:
                key: logging-ca
                name: system-settings
          - name: SERVER_BASEPATH
            value: /kibana
          - name: SERVER_PUBLICBASEURL
            value: https://localhost/kibana
          - name: SERVER_REWRITEBASEPATH
            value: "true"
          - name: LOGGING_QUIET
            value: "true"
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 3
          timeoutSeconds: 5
          exec:
            command:
              - bash
              - -c
              - |
                #!/usr/bin/env bash -e

                # Disable nss cache to avoid filling dentry cache when calling curl
                # This is required with Kibana Docker using nss < 3.52
                export NSS_SDB_USE_CACHE=no

                http () {
                    local path="${1}"
                    set -- -XGET -s --fail -L

                    if [ -n "${ELASTICSEARCH_USERNAME}" ] && [ -n "${ELASTICSEARCH_PASSWORD}" ]; then
                      set -- "$@" -u "${ELASTICSEARCH_USERNAME}:${ELASTICSEARCH_PASSWORD}"
                    fi

                    STATUS=$(curl --output /dev/null --write-out "%{http_code}" -k "$@" "http://localhost:5601${path}")
                    if [[ "${STATUS}" -eq 200 ]]; then
                      exit 0
                    fi

                    echo "Error: Got HTTP code ${STATUS} but expected a 200"
                    exit 1
                }

                http "/kibana/app/kibana"
        ports:
        - containerPort: 5601
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 1000m
            memory: 2Gi
        volumeMounts:
          - name: kibanaconfig
            mountPath: /usr/share/kibana/config/kibana.yml
            subPath: kibana.yml
---
# Source: assemblyline/templates/core-deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alerter
  labels:
    app: assemblyline
    section: core
    component: alerter
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: assemblyline
      section: core
      component: alerter
  template:
    metadata:
      annotations:
        checksum/config: e4b6cdeb54d1d645cb5a466d7fd260a406bec616517bff3840f231508e0edb26
      labels:
        app: assemblyline
        section: core
        component: alerter
                
        
        
    spec:
      priorityClassName: al-core-priority
      serviceAccountName: default
      terminationGracePeriodSeconds: 60
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
        - name: alerter
          image: cccs/assemblyline-core:4.6.0.stable3
          imagePullPolicy: IfNotPresent
          securityContext:
                        
            
            
            runAsUser: 1000
            runAsGroup: 1000
          
          command: ['python', '-m', 'assemblyline_core.alerter.run_alerter']
          
          volumeMounts:
          
                      
            - name: al-config
              mountPath: /etc/assemblyline/config.yml
              subPath: config
              readOnly: true
            
            
            
            
          
          resources:
            requests:
              memory: 128Mi
              cpu: 50m
            limits:
              memory: 1Gi
              cpu: 1
          env:
                      
            - name: ELASTIC_ALERT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-alert-shards
            - name: ELASTIC_DEFAULT_REPLICAS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-default-replicas
            - name: ELASTIC_DEFAULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-default-shards
            - name: ELASTIC_EMPTYRESULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-emptyresult-shards
            - name: ELASTIC_FILE_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-file-shards
            - name: ELASTIC_FILESCORE_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-filescore-shards
            - name: ELASTIC_RESULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-result-shards
            - name: ELASTIC_SAFELIST_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-safelist-shards
            - name: ELASTIC_SUBMISSION_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-submission-shards
            - name: LOGGING_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: assemblyline-system-passwords
                  key: logging-password
            - name: LOGGING_HOST
              valueFrom:
                configMapKeyRef:
                  name: system-settings
                  key: logging-host
            - name: LOGGING_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: system-settings
                  key: logging-username
            - name: ELASTIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: assemblyline-system-passwords
                  key: datastore-password
            - name: RETROHUNT_API_KEY
              valueFrom:
                secretKeyRef:
                  name: retrohunt-secret
                  key: password
            - name: ENABLE_INTERNAL_ENCRYPTION
              value: "false"
            - name: DISPATCHER_RESULT_THREADS
              value: "6"
            - name: DISPATCHER_FINALIZE_THREADS
              value: "6"
            - name: DEV_MODE
              value: "false"
            
            - name: INTERNAL_FILESTORE_ACCESS
              valueFrom:
                secretKeyRef:
                  name: internal-filestore-keys
                  key: accesskey
            - name: INTERNAL_FILESTORE_KEY
              valueFrom:
                secretKeyRef:
                  name: internal-filestore-keys
                  key: secretkey
            
            
            
            - name: AL_SHUTDOWN_GRACE
              value: "60"
          livenessProbe:
            exec:
              command:
               - bash
               - "-c"
               - if [[ ! `find /tmp/heartbeat -newermt '-30 seconds'` ]]; then false; fi
            initialDelaySeconds: 30
            periodSeconds: 30
      volumes:
              
        
        
              
        - name: al-config
          configMap:
            name: release-name-global-config
---
# Source: assemblyline/templates/core-deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: workflow
  labels:
    app: assemblyline
    section: core
    component: workflow
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: assemblyline
      section: core
      component: workflow
  template:
    metadata:
      annotations:
        checksum/config: e4b6cdeb54d1d645cb5a466d7fd260a406bec616517bff3840f231508e0edb26
      labels:
        app: assemblyline
        section: core
        component: workflow
                
        
        
    spec:
      priorityClassName: al-core-priority
      serviceAccountName: default
      terminationGracePeriodSeconds: 60
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
        - name: workflow
          image: cccs/assemblyline-core:4.6.0.stable3
          imagePullPolicy: IfNotPresent
          securityContext:
                        
            
            
            runAsUser: 1000
            runAsGroup: 1000
          
          command: ['python', '-m', 'assemblyline_core.workflow.run_workflow']
          
          volumeMounts:
          
                      
            - name: al-config
              mountPath: /etc/assemblyline/config.yml
              subPath: config
              readOnly: true
            
            
            
            
          
          resources:
            requests:
              memory: 128Mi
              cpu: 50m
            limits:
              memory: 1Gi
              cpu: 1
          env:
                      
            - name: ELASTIC_ALERT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-alert-shards
            - name: ELASTIC_DEFAULT_REPLICAS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-default-replicas
            - name: ELASTIC_DEFAULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-default-shards
            - name: ELASTIC_EMPTYRESULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-emptyresult-shards
            - name: ELASTIC_FILE_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-file-shards
            - name: ELASTIC_FILESCORE_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-filescore-shards
            - name: ELASTIC_RESULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-result-shards
            - name: ELASTIC_SAFELIST_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-safelist-shards
            - name: ELASTIC_SUBMISSION_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-submission-shards
            - name: LOGGING_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: assemblyline-system-passwords
                  key: logging-password
            - name: LOGGING_HOST
              valueFrom:
                configMapKeyRef:
                  name: system-settings
                  key: logging-host
            - name: LOGGING_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: system-settings
                  key: logging-username
            - name: ELASTIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: assemblyline-system-passwords
                  key: datastore-password
            - name: RETROHUNT_API_KEY
              valueFrom:
                secretKeyRef:
                  name: retrohunt-secret
                  key: password
            - name: ENABLE_INTERNAL_ENCRYPTION
              value: "false"
            - name: DISPATCHER_RESULT_THREADS
              value: "6"
            - name: DISPATCHER_FINALIZE_THREADS
              value: "6"
            - name: DEV_MODE
              value: "false"
            
            - name: INTERNAL_FILESTORE_ACCESS
              valueFrom:
                secretKeyRef:
                  name: internal-filestore-keys
                  key: accesskey
            - name: INTERNAL_FILESTORE_KEY
              valueFrom:
                secretKeyRef:
                  name: internal-filestore-keys
                  key: secretkey
            
            
            
            - name: AL_SHUTDOWN_GRACE
              value: "60"
          livenessProbe:
            exec:
              command:
               - bash
               - "-c"
               - if [[ ! `find /tmp/heartbeat -newermt '-30 seconds'` ]]; then false; fi
            initialDelaySeconds: 30
            periodSeconds: 30
      volumes:
              
        
        
              
        - name: al-config
          configMap:
            name: release-name-global-config
---
# Source: assemblyline/templates/core-deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: expiry
  labels:
    app: assemblyline
    section: core
    component: expiry
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: assemblyline
      section: core
      component: expiry
  template:
    metadata:
      annotations:
        checksum/config: e4b6cdeb54d1d645cb5a466d7fd260a406bec616517bff3840f231508e0edb26
      labels:
        app: assemblyline
        section: core
        component: expiry
                
        
        
    spec:
      priorityClassName: al-core-priority
      serviceAccountName: default
      terminationGracePeriodSeconds: 60
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
        - name: expiry
          image: cccs/assemblyline-core:4.6.0.stable3
          imagePullPolicy: IfNotPresent
          securityContext:
                        
            
            
            runAsUser: 1000
            runAsGroup: 1000
          
          command: ['python', '-m', 'assemblyline_core.expiry.run_expiry']
          
          volumeMounts:
          
                      
            - name: al-config
              mountPath: /etc/assemblyline/config.yml
              subPath: config
              readOnly: true
            
            
            
            
          
          resources:
            requests:
              memory: 128Mi
              cpu: 150m
            limits:
              memory: 1Gi
              cpu: 1
          env:
                      
            - name: ELASTIC_ALERT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-alert-shards
            - name: ELASTIC_DEFAULT_REPLICAS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-default-replicas
            - name: ELASTIC_DEFAULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-default-shards
            - name: ELASTIC_EMPTYRESULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-emptyresult-shards
            - name: ELASTIC_FILE_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-file-shards
            - name: ELASTIC_FILESCORE_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-filescore-shards
            - name: ELASTIC_RESULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-result-shards
            - name: ELASTIC_SAFELIST_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-safelist-shards
            - name: ELASTIC_SUBMISSION_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-submission-shards
            - name: LOGGING_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: assemblyline-system-passwords
                  key: logging-password
            - name: LOGGING_HOST
              valueFrom:
                configMapKeyRef:
                  name: system-settings
                  key: logging-host
            - name: LOGGING_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: system-settings
                  key: logging-username
            - name: ELASTIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: assemblyline-system-passwords
                  key: datastore-password
            - name: RETROHUNT_API_KEY
              valueFrom:
                secretKeyRef:
                  name: retrohunt-secret
                  key: password
            - name: ENABLE_INTERNAL_ENCRYPTION
              value: "false"
            - name: DISPATCHER_RESULT_THREADS
              value: "6"
            - name: DISPATCHER_FINALIZE_THREADS
              value: "6"
            - name: DEV_MODE
              value: "false"
            
            - name: INTERNAL_FILESTORE_ACCESS
              valueFrom:
                secretKeyRef:
                  name: internal-filestore-keys
                  key: accesskey
            - name: INTERNAL_FILESTORE_KEY
              valueFrom:
                secretKeyRef:
                  name: internal-filestore-keys
                  key: secretkey
            
            
            
            - name: AL_SHUTDOWN_GRACE
              value: "60"
          livenessProbe:
            exec:
              command:
               - bash
               - "-c"
               - if [[ ! `find /tmp/heartbeat -newermt '-30 seconds'` ]]; then false; fi
            initialDelaySeconds: 30
            periodSeconds: 30
      volumes:
              
        
        
              
        - name: al-config
          configMap:
            name: release-name-global-config
---
# Source: assemblyline/templates/core-deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metrics
  labels:
    app: assemblyline
    section: core
    component: metrics
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: assemblyline
      section: core
      component: metrics
  template:
    metadata:
      annotations:
        checksum/config: e4b6cdeb54d1d645cb5a466d7fd260a406bec616517bff3840f231508e0edb26
      labels:
        app: assemblyline
        section: core
        component: metrics
                
        
        
    spec:
      priorityClassName: al-core-priority
      serviceAccountName: default
      terminationGracePeriodSeconds: 60
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
        - name: metrics
          image: cccs/assemblyline-core:4.6.0.stable3
          imagePullPolicy: IfNotPresent
          securityContext:
                        
            
            
            runAsUser: 1000
            runAsGroup: 1000
          command: ['python', '-m', 'assemblyline_core.metrics.run_metrics_aggregator']
          volumeMounts:
                      
            - name: al-config
              mountPath: /etc/assemblyline/config.yml
              subPath: config
              readOnly: true
            
            
            
            
          
          resources:
            requests:
              memory: 128Mi
              cpu: 500m
            limits:
              memory: 1Gi
              cpu: 1
          env:
                      
            - name: ELASTIC_ALERT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-alert-shards
            - name: ELASTIC_DEFAULT_REPLICAS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-default-replicas
            - name: ELASTIC_DEFAULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-default-shards
            - name: ELASTIC_EMPTYRESULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-emptyresult-shards
            - name: ELASTIC_FILE_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-file-shards
            - name: ELASTIC_FILESCORE_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-filescore-shards
            - name: ELASTIC_RESULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-result-shards
            - name: ELASTIC_SAFELIST_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-safelist-shards
            - name: ELASTIC_SUBMISSION_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-submission-shards
            - name: LOGGING_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: assemblyline-system-passwords
                  key: logging-password
            - name: LOGGING_HOST
              valueFrom:
                configMapKeyRef:
                  name: system-settings
                  key: logging-host
            - name: LOGGING_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: system-settings
                  key: logging-username
            - name: ELASTIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: assemblyline-system-passwords
                  key: datastore-password
            - name: RETROHUNT_API_KEY
              valueFrom:
                secretKeyRef:
                  name: retrohunt-secret
                  key: password
            - name: ENABLE_INTERNAL_ENCRYPTION
              value: "false"
            - name: DISPATCHER_RESULT_THREADS
              value: "6"
            - name: DISPATCHER_FINALIZE_THREADS
              value: "6"
            - name: DEV_MODE
              value: "false"
            
            - name: INTERNAL_FILESTORE_ACCESS
              valueFrom:
                secretKeyRef:
                  name: internal-filestore-keys
                  key: accesskey
            - name: INTERNAL_FILESTORE_KEY
              valueFrom:
                secretKeyRef:
                  name: internal-filestore-keys
                  key: secretkey
            
            
            
            - name: AL_SHUTDOWN_GRACE
              value: "60"
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
---
# Source: assemblyline/templates/core-deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: statistics
  labels:
    app: assemblyline
    section: core
    component: statistics
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: assemblyline
      section: core
      component: statistics
  template:
    metadata:
      annotations:
        checksum/config: e4b6cdeb54d1d645cb5a466d7fd260a406bec616517bff3840f231508e0edb26
      labels:
        app: assemblyline
        section: core
        component: statistics
                
        
        
    spec:
      priorityClassName: al-core-priority
      serviceAccountName: default
      terminationGracePeriodSeconds: 60
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
        - name: statistics
          image: cccs/assemblyline-core:4.6.0.stable3
          imagePullPolicy: IfNotPresent
          securityContext:
                        
            
            
            runAsUser: 1000
            runAsGroup: 1000
          command: ['python', '-m', 'assemblyline_core.metrics.run_statistics_aggregator']
          volumeMounts:
                      
            - name: al-config
              mountPath: /etc/assemblyline/config.yml
              subPath: config
              readOnly: true
            
            
            
            
          
          resources:
            requests:
              memory: 128Mi
              cpu: 50m
            limits:
              memory: 1Gi
              cpu: 1
          env:
                      
            - name: ELASTIC_ALERT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-alert-shards
            - name: ELASTIC_DEFAULT_REPLICAS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-default-replicas
            - name: ELASTIC_DEFAULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-default-shards
            - name: ELASTIC_EMPTYRESULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-emptyresult-shards
            - name: ELASTIC_FILE_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-file-shards
            - name: ELASTIC_FILESCORE_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-filescore-shards
            - name: ELASTIC_RESULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-result-shards
            - name: ELASTIC_SAFELIST_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-safelist-shards
            - name: ELASTIC_SUBMISSION_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-submission-shards
            - name: LOGGING_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: assemblyline-system-passwords
                  key: logging-password
            - name: LOGGING_HOST
              valueFrom:
                configMapKeyRef:
                  name: system-settings
                  key: logging-host
            - name: LOGGING_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: system-settings
                  key: logging-username
            - name: ELASTIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: assemblyline-system-passwords
                  key: datastore-password
            - name: RETROHUNT_API_KEY
              valueFrom:
                secretKeyRef:
                  name: retrohunt-secret
                  key: password
            - name: ENABLE_INTERNAL_ENCRYPTION
              value: "false"
            - name: DISPATCHER_RESULT_THREADS
              value: "6"
            - name: DISPATCHER_FINALIZE_THREADS
              value: "6"
            - name: DEV_MODE
              value: "false"
            
            - name: INTERNAL_FILESTORE_ACCESS
              valueFrom:
                secretKeyRef:
                  name: internal-filestore-keys
                  key: accesskey
            - name: INTERNAL_FILESTORE_KEY
              valueFrom:
                secretKeyRef:
                  name: internal-filestore-keys
                  key: secretkey
            
            
            
            - name: AL_SHUTDOWN_GRACE
              value: "60"
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
---
# Source: assemblyline/templates/core-deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: es-metrics
  labels:
    app: assemblyline
    section: core
    component: es-metrics
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: assemblyline
      section: core
      component: es-metrics
  template:
    metadata:
      annotations:
        checksum/config: e4b6cdeb54d1d645cb5a466d7fd260a406bec616517bff3840f231508e0edb26
      labels:
        app: assemblyline
        section: core
        component: es-metrics
                
        
        
    spec:
      priorityClassName: al-core-priority
      serviceAccountName: default
      terminationGracePeriodSeconds: 60
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
        - name: es-metrics
          image: cccs/assemblyline-core:4.6.0.stable3
          imagePullPolicy: IfNotPresent
          securityContext:
                        
            
            
            runAsUser: 1000
            runAsGroup: 1000
          
          command: ['python', '-m', 'assemblyline_core.metrics.es_metrics']
          
          volumeMounts:
          
                      
            - name: al-config
              mountPath: /etc/assemblyline/config.yml
              subPath: config
              readOnly: true
            
            
            
            
          
          resources:
            requests:
              memory: 128Mi
              cpu: 50m
            limits:
              memory: 1Gi
              cpu: 1
          env:
                      
            - name: ELASTIC_ALERT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-alert-shards
            - name: ELASTIC_DEFAULT_REPLICAS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-default-replicas
            - name: ELASTIC_DEFAULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-default-shards
            - name: ELASTIC_EMPTYRESULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-emptyresult-shards
            - name: ELASTIC_FILE_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-file-shards
            - name: ELASTIC_FILESCORE_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-filescore-shards
            - name: ELASTIC_RESULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-result-shards
            - name: ELASTIC_SAFELIST_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-safelist-shards
            - name: ELASTIC_SUBMISSION_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-submission-shards
            - name: LOGGING_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: assemblyline-system-passwords
                  key: logging-password
            - name: LOGGING_HOST
              valueFrom:
                configMapKeyRef:
                  name: system-settings
                  key: logging-host
            - name: LOGGING_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: system-settings
                  key: logging-username
            - name: ELASTIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: assemblyline-system-passwords
                  key: datastore-password
            - name: RETROHUNT_API_KEY
              valueFrom:
                secretKeyRef:
                  name: retrohunt-secret
                  key: password
            - name: ENABLE_INTERNAL_ENCRYPTION
              value: "false"
            - name: DISPATCHER_RESULT_THREADS
              value: "6"
            - name: DISPATCHER_FINALIZE_THREADS
              value: "6"
            - name: DEV_MODE
              value: "false"
            
            - name: INTERNAL_FILESTORE_ACCESS
              valueFrom:
                secretKeyRef:
                  name: internal-filestore-keys
                  key: accesskey
            - name: INTERNAL_FILESTORE_KEY
              valueFrom:
                secretKeyRef:
                  name: internal-filestore-keys
                  key: secretkey
            
            
            
            - name: AL_SHUTDOWN_GRACE
              value: "60"
          livenessProbe:
            exec:
              command:
               - bash
               - "-c"
               - if [[ ! `find /tmp/heartbeat -newermt '-30 seconds'` ]]; then false; fi
            initialDelaySeconds: 30
            periodSeconds: 30
      volumes:
              
        
        
              
        - name: al-config
          configMap:
            name: release-name-global-config
---
# Source: assemblyline/templates/core-deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: heartbeat
  labels:
    app: assemblyline
    section: core
    component: heartbeat
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: assemblyline
      section: core
      component: heartbeat
  template:
    metadata:
      annotations:
        checksum/config: e4b6cdeb54d1d645cb5a466d7fd260a406bec616517bff3840f231508e0edb26
      labels:
        app: assemblyline
        section: core
        component: heartbeat
                
        
        
    spec:
      priorityClassName: al-core-priority
      serviceAccountName: default
      terminationGracePeriodSeconds: 60
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
        - name: heartbeat
          image: cccs/assemblyline-core:4.6.0.stable3
          imagePullPolicy: IfNotPresent
          securityContext:
                        
            
            
            runAsUser: 1000
            runAsGroup: 1000
          
          command: ['python', '-m', 'assemblyline_core.metrics.run_heartbeat_manager']
          
          volumeMounts:
          
                      
            - name: al-config
              mountPath: /etc/assemblyline/config.yml
              subPath: config
              readOnly: true
            
            
            
            
          
          resources:
            requests:
              memory: 128Mi
              cpu: 500m
            limits:
              memory: 1Gi
              cpu: 1
          env:
                      
            - name: ELASTIC_ALERT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-alert-shards
            - name: ELASTIC_DEFAULT_REPLICAS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-default-replicas
            - name: ELASTIC_DEFAULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-default-shards
            - name: ELASTIC_EMPTYRESULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-emptyresult-shards
            - name: ELASTIC_FILE_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-file-shards
            - name: ELASTIC_FILESCORE_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-filescore-shards
            - name: ELASTIC_RESULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-result-shards
            - name: ELASTIC_SAFELIST_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-safelist-shards
            - name: ELASTIC_SUBMISSION_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-submission-shards
            - name: LOGGING_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: assemblyline-system-passwords
                  key: logging-password
            - name: LOGGING_HOST
              valueFrom:
                configMapKeyRef:
                  name: system-settings
                  key: logging-host
            - name: LOGGING_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: system-settings
                  key: logging-username
            - name: ELASTIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: assemblyline-system-passwords
                  key: datastore-password
            - name: RETROHUNT_API_KEY
              valueFrom:
                secretKeyRef:
                  name: retrohunt-secret
                  key: password
            - name: ENABLE_INTERNAL_ENCRYPTION
              value: "false"
            - name: DISPATCHER_RESULT_THREADS
              value: "6"
            - name: DISPATCHER_FINALIZE_THREADS
              value: "6"
            - name: DEV_MODE
              value: "false"
            
            - name: INTERNAL_FILESTORE_ACCESS
              valueFrom:
                secretKeyRef:
                  name: internal-filestore-keys
                  key: accesskey
            - name: INTERNAL_FILESTORE_KEY
              valueFrom:
                secretKeyRef:
                  name: internal-filestore-keys
                  key: secretkey
            
            
            
            - name: AL_SHUTDOWN_GRACE
              value: "60"
          livenessProbe:
            exec:
              command:
               - bash
               - "-c"
               - if [[ ! `find /tmp/heartbeat -newermt '-30 seconds'` ]]; then false; fi
            initialDelaySeconds: 30
            periodSeconds: 30
      volumes:
              
        
        
              
        - name: al-config
          configMap:
            name: release-name-global-config
---
# Source: assemblyline/templates/core-deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: plumber
  labels:
    app: assemblyline
    section: core
    component: plumber
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: assemblyline
      section: core
      component: plumber
  template:
    metadata:
      annotations:
        checksum/config: e4b6cdeb54d1d645cb5a466d7fd260a406bec616517bff3840f231508e0edb26
      labels:
        app: assemblyline
        section: core
        component: plumber
                
        
        
    spec:
      priorityClassName: al-core-priority
      serviceAccountName: default
      terminationGracePeriodSeconds: 60
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
        - name: plumber
          image: cccs/assemblyline-core:4.6.0.stable3
          imagePullPolicy: IfNotPresent
          securityContext:
                        
            
            
            runAsUser: 1000
            runAsGroup: 1000
          
          command: ['python', '-m', 'assemblyline_core.plumber.run_plumber']
          
          volumeMounts:
          
                      
            - name: al-config
              mountPath: /etc/assemblyline/config.yml
              subPath: config
              readOnly: true
            
            
            
            
          
          resources:
            requests:
              memory: 128Mi
              cpu: 50m
            limits:
              memory: 1Gi
              cpu: 1
          env:
                      
            - name: ELASTIC_ALERT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-alert-shards
            - name: ELASTIC_DEFAULT_REPLICAS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-default-replicas
            - name: ELASTIC_DEFAULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-default-shards
            - name: ELASTIC_EMPTYRESULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-emptyresult-shards
            - name: ELASTIC_FILE_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-file-shards
            - name: ELASTIC_FILESCORE_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-filescore-shards
            - name: ELASTIC_RESULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-result-shards
            - name: ELASTIC_SAFELIST_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-safelist-shards
            - name: ELASTIC_SUBMISSION_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-submission-shards
            - name: LOGGING_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: assemblyline-system-passwords
                  key: logging-password
            - name: LOGGING_HOST
              valueFrom:
                configMapKeyRef:
                  name: system-settings
                  key: logging-host
            - name: LOGGING_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: system-settings
                  key: logging-username
            - name: ELASTIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: assemblyline-system-passwords
                  key: datastore-password
            - name: RETROHUNT_API_KEY
              valueFrom:
                secretKeyRef:
                  name: retrohunt-secret
                  key: password
            - name: ENABLE_INTERNAL_ENCRYPTION
              value: "false"
            - name: DISPATCHER_RESULT_THREADS
              value: "6"
            - name: DISPATCHER_FINALIZE_THREADS
              value: "6"
            - name: DEV_MODE
              value: "false"
            
            - name: INTERNAL_FILESTORE_ACCESS
              valueFrom:
                secretKeyRef:
                  name: internal-filestore-keys
                  key: accesskey
            - name: INTERNAL_FILESTORE_KEY
              valueFrom:
                secretKeyRef:
                  name: internal-filestore-keys
                  key: secretkey
            
            
            
            - name: AL_SHUTDOWN_GRACE
              value: "60"
          livenessProbe:
            exec:
              command:
               - bash
               - "-c"
               - if [[ ! `find /tmp/heartbeat -newermt '-30 seconds'` ]]; then false; fi
            initialDelaySeconds: 30
            periodSeconds: 30
      volumes:
              
        
        
              
        - name: al-config
          configMap:
            name: release-name-global-config
---
# Source: assemblyline/templates/core-deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dispatcher
  labels:
    app: assemblyline
    section: core
    component: dispatcher
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: assemblyline
      section: core
      component: dispatcher
  template:
    metadata:
      annotations:
        checksum/config: e4b6cdeb54d1d645cb5a466d7fd260a406bec616517bff3840f231508e0edb26
      labels:
        app: assemblyline
        section: core
        component: dispatcher
                
        
        
    spec:
      priorityClassName: al-core-priority
      serviceAccountName: default
      terminationGracePeriodSeconds: 60
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
        - name: dispatcher
          image: cccs/assemblyline-core:4.6.0.stable3
          imagePullPolicy: IfNotPresent
          securityContext:
                        
            
            
            runAsUser: 1000
            runAsGroup: 1000
          
          command: ['python', '-m', 'assemblyline_core.dispatching']
          
          volumeMounts:
          
                      
            - name: al-config
              mountPath: /etc/assemblyline/config.yml
              subPath: config
              readOnly: true
            
            
            
            
          
          resources:
            requests:
              memory: 256Mi
              cpu: 500m
            limits:
              memory: 1Gi
              cpu: 1
          env:
                      
            - name: ELASTIC_ALERT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-alert-shards
            - name: ELASTIC_DEFAULT_REPLICAS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-default-replicas
            - name: ELASTIC_DEFAULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-default-shards
            - name: ELASTIC_EMPTYRESULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-emptyresult-shards
            - name: ELASTIC_FILE_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-file-shards
            - name: ELASTIC_FILESCORE_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-filescore-shards
            - name: ELASTIC_RESULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-result-shards
            - name: ELASTIC_SAFELIST_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-safelist-shards
            - name: ELASTIC_SUBMISSION_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-submission-shards
            - name: LOGGING_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: assemblyline-system-passwords
                  key: logging-password
            - name: LOGGING_HOST
              valueFrom:
                configMapKeyRef:
                  name: system-settings
                  key: logging-host
            - name: LOGGING_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: system-settings
                  key: logging-username
            - name: ELASTIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: assemblyline-system-passwords
                  key: datastore-password
            - name: RETROHUNT_API_KEY
              valueFrom:
                secretKeyRef:
                  name: retrohunt-secret
                  key: password
            - name: ENABLE_INTERNAL_ENCRYPTION
              value: "false"
            - name: DISPATCHER_RESULT_THREADS
              value: "6"
            - name: DISPATCHER_FINALIZE_THREADS
              value: "6"
            - name: DEV_MODE
              value: "false"
            
            - name: INTERNAL_FILESTORE_ACCESS
              valueFrom:
                secretKeyRef:
                  name: internal-filestore-keys
                  key: accesskey
            - name: INTERNAL_FILESTORE_KEY
              valueFrom:
                secretKeyRef:
                  name: internal-filestore-keys
                  key: secretkey
            
            
            
            - name: AL_SHUTDOWN_GRACE
              value: "60"
          livenessProbe:
            exec:
              command:
               - bash
               - "-c"
               - if [[ ! `find /tmp/heartbeat -newermt '-30 seconds'` ]]; then false; fi
            initialDelaySeconds: 30
            periodSeconds: 30
      volumes:
              
        
        
              
        - name: al-config
          configMap:
            name: release-name-global-config
---
# Source: assemblyline/templates/core-deployments.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingester
  labels:
    app: assemblyline
    section: core
    component: ingester
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: assemblyline
      section: core
      component: ingester
  template:
    metadata:
      annotations:
        checksum/config: e4b6cdeb54d1d645cb5a466d7fd260a406bec616517bff3840f231508e0edb26
      labels:
        app: assemblyline
        section: core
        component: ingester
                
        
        
    spec:
      priorityClassName: al-core-priority
      serviceAccountName: default
      terminationGracePeriodSeconds: 60
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
        - name: ingester
          image: cccs/assemblyline-core:4.6.0.stable3
          imagePullPolicy: IfNotPresent
          securityContext:
                        
            
            
            runAsUser: 1000
            runAsGroup: 1000
          
          command: ['python', '-m', 'assemblyline_core.ingester']
          
          volumeMounts:
          
                      
            - name: al-config
              mountPath: /etc/assemblyline/config.yml
              subPath: config
              readOnly: true
            
            
            
            
          
          resources:
            requests:
              memory: 128Mi
              cpu: 500m
            limits:
              memory: 1Gi
              cpu: 1
          env:
                      
            - name: ELASTIC_ALERT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-alert-shards
            - name: ELASTIC_DEFAULT_REPLICAS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-default-replicas
            - name: ELASTIC_DEFAULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-default-shards
            - name: ELASTIC_EMPTYRESULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-emptyresult-shards
            - name: ELASTIC_FILE_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-file-shards
            - name: ELASTIC_FILESCORE_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-filescore-shards
            - name: ELASTIC_RESULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-result-shards
            - name: ELASTIC_SAFELIST_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-safelist-shards
            - name: ELASTIC_SUBMISSION_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-submission-shards
            - name: LOGGING_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: assemblyline-system-passwords
                  key: logging-password
            - name: LOGGING_HOST
              valueFrom:
                configMapKeyRef:
                  name: system-settings
                  key: logging-host
            - name: LOGGING_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: system-settings
                  key: logging-username
            - name: ELASTIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: assemblyline-system-passwords
                  key: datastore-password
            - name: RETROHUNT_API_KEY
              valueFrom:
                secretKeyRef:
                  name: retrohunt-secret
                  key: password
            - name: ENABLE_INTERNAL_ENCRYPTION
              value: "false"
            - name: DISPATCHER_RESULT_THREADS
              value: "6"
            - name: DISPATCHER_FINALIZE_THREADS
              value: "6"
            - name: DEV_MODE
              value: "false"
            
            - name: INTERNAL_FILESTORE_ACCESS
              valueFrom:
                secretKeyRef:
                  name: internal-filestore-keys
                  key: accesskey
            - name: INTERNAL_FILESTORE_KEY
              valueFrom:
                secretKeyRef:
                  name: internal-filestore-keys
                  key: secretkey
            
            
            
            - name: AL_SHUTDOWN_GRACE
              value: "60"
          livenessProbe:
            exec:
              command:
               - bash
               - "-c"
               - if [[ ! `find /tmp/heartbeat -newermt '-30 seconds'` ]]; then false; fi
            initialDelaySeconds: 30
            periodSeconds: 30
      volumes:
              
        
        
              
        - name: al-config
          configMap:
            name: release-name-global-config
---
# Source: assemblyline/templates/redis.yaml
# Create a POD/Service for non-persisted redis
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-volatile
  labels:
    app: assemblyline
    section: core
    component: redis-volatile
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: assemblyline
      section: core
      component: redis-volatile
  template:
    metadata:
      labels:
        app: assemblyline
        section: core
        component: redis-volatile
                
        
        
    spec:
      priorityClassName: al-infra
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      securityContext:
        fsGroup: 1000
      tolerations:
                
        
        
      containers:
        - name: redis
          image: redis
          command: ['redis-server']
          securityContext:
                        
            
            
          args: ['--appendonly', 'no', '--maxclients', '100000', '--save', '' ]
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 6379
          resources:
            requests:
              cpu: 750m
              memory: 1Gi
            limits:
              cpu: 1
              memory: 8Gi
          readinessProbe:
            exec:
              command: ['bash', '-c', 'if [ "$(timeout 3s redis-cli ping)" != "PONG" ]; then exit 1; fi']
            timeoutSeconds: 5
            periodSeconds: 5
---
# Source: assemblyline/templates/scaler-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scaler
  labels:
    app: assemblyline
    section: core
    component: scaler
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: assemblyline
      section: core
      component: scaler
  template:
    metadata:
      annotations:
        checksum/config: e4b6cdeb54d1d645cb5a466d7fd260a406bec616517bff3840f231508e0edb26
      labels:
        app: assemblyline
        section: core
        component: scaler
                
        
        
    spec:
      serviceAccountName: release-name-scaling-manager
      priorityClassName: al-core-priority
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
        - name: scaler
          image: cccs/assemblyline-core:4.6.0.stable3
          imagePullPolicy: IfNotPresent
          
          command: ['python', '-m', 'assemblyline_core.scaler.run_scaler']
          
          securityContext:
                        
            
                      
          volumeMounts:
                      
            - name: al-config
              mountPath: /etc/assemblyline/config.yml
              subPath: config
              readOnly: true
            
            
            
            
          
          env:
                      
            - name: ELASTIC_ALERT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-alert-shards
            - name: ELASTIC_DEFAULT_REPLICAS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-default-replicas
            - name: ELASTIC_DEFAULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-default-shards
            - name: ELASTIC_EMPTYRESULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-emptyresult-shards
            - name: ELASTIC_FILE_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-file-shards
            - name: ELASTIC_FILESCORE_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-filescore-shards
            - name: ELASTIC_RESULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-result-shards
            - name: ELASTIC_SAFELIST_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-safelist-shards
            - name: ELASTIC_SUBMISSION_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-submission-shards
            - name: LOGGING_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: assemblyline-system-passwords
                  key: logging-password
            - name: LOGGING_HOST
              valueFrom:
                configMapKeyRef:
                  name: system-settings
                  key: logging-host
            - name: LOGGING_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: system-settings
                  key: logging-username
            - name: ELASTIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: assemblyline-system-passwords
                  key: datastore-password
            - name: RETROHUNT_API_KEY
              valueFrom:
                secretKeyRef:
                  name: retrohunt-secret
                  key: password
            - name: ENABLE_INTERNAL_ENCRYPTION
              value: "false"
            - name: DISPATCHER_RESULT_THREADS
              value: "6"
            - name: DISPATCHER_FINALIZE_THREADS
              value: "6"
            - name: DEV_MODE
              value: "false"
            
            - name: INTERNAL_FILESTORE_ACCESS
              valueFrom:
                secretKeyRef:
                  name: internal-filestore-keys
                  key: accesskey
            - name: INTERNAL_FILESTORE_KEY
              valueFrom:
                secretKeyRef:
                  name: internal-filestore-keys
                  key: secretkey
            
            
            
            - name: KUBERNETES_AL_CONFIG
              value: release-name-global-config
            - name: RELEASE_NAME
              value: release-name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SERVICE_API_HOST
              value: http://service-server:5003
            - name: CONFIGURATION_CONFIGMAP
              value: release-name-global-config
            - name: PRIVILEGED_SERVICE_ACCOUNT_NAME
              value: default
            - name: UNPRIVILEGED_SERVICE_ACCOUNT_NAME
              value: default
          resources:
            limits:
              cpu: 1
              memory: 4Gi
            requests:
              cpu: 500m
              memory: 512Mi
#          livenessProbe:
#            exec:
#              command: [ "bash", "-c", "if [[ ! `find /tmp/heartbeat -newermt '-30 seconds'` ]]; then false; fi" ]
#            initialDelaySeconds: 30
#            periodSeconds: 30
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
---
# Source: assemblyline/templates/service-server-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-server
  labels:
    app: assemblyline
    section: core
    component: service-server
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: assemblyline
      section: core
      component: service-server
  template:
    metadata:
      annotations:
        checksum/config: e4b6cdeb54d1d645cb5a466d7fd260a406bec616517bff3840f231508e0edb26
      labels:
        app: assemblyline
        section: core
        component: service-server
                
        
        
    spec:
      priorityClassName: al-core-priority
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
        - name: service-server
          image: cccs/assemblyline-service-server:4.6.0.stable3
          imagePullPolicy: IfNotPresent
          
          securityContext:
                        
            
            
          volumeMounts:
          
                      
            - name: al-config
              mountPath: /etc/assemblyline/config.yml
              subPath: config
              readOnly: true
            
            
            
            
          ports:
            - containerPort: 5003
          env:
                      
            - name: ELASTIC_ALERT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-alert-shards
            - name: ELASTIC_DEFAULT_REPLICAS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-default-replicas
            - name: ELASTIC_DEFAULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-default-shards
            - name: ELASTIC_EMPTYRESULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-emptyresult-shards
            - name: ELASTIC_FILE_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-file-shards
            - name: ELASTIC_FILESCORE_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-filescore-shards
            - name: ELASTIC_RESULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-result-shards
            - name: ELASTIC_SAFELIST_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-safelist-shards
            - name: ELASTIC_SUBMISSION_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-submission-shards
            - name: LOGGING_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: assemblyline-system-passwords
                  key: logging-password
            - name: LOGGING_HOST
              valueFrom:
                configMapKeyRef:
                  name: system-settings
                  key: logging-host
            - name: LOGGING_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: system-settings
                  key: logging-username
            - name: ELASTIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: assemblyline-system-passwords
                  key: datastore-password
            - name: RETROHUNT_API_KEY
              valueFrom:
                secretKeyRef:
                  name: retrohunt-secret
                  key: password
            - name: ENABLE_INTERNAL_ENCRYPTION
              value: "false"
            - name: DISPATCHER_RESULT_THREADS
              value: "6"
            - name: DISPATCHER_FINALIZE_THREADS
              value: "6"
            - name: DEV_MODE
              value: "false"
            
            - name: INTERNAL_FILESTORE_ACCESS
              valueFrom:
                secretKeyRef:
                  name: internal-filestore-keys
                  key: accesskey
            - name: INTERNAL_FILESTORE_KEY
              valueFrom:
                secretKeyRef:
                  name: internal-filestore-keys
                  key: secretkey
            
            
            
            - name: WORKERS
              value: '6'
            - name: WORKER_CONNECTIONS
              value: '2048'
          
          resources:
            limits:
              cpu: 1
              memory: 1Gi
            requests:
              cpu: 500m
              memory: 1Gi
          livenessProbe:
            httpGet:
              path: /healthz/live
              port: 5003
              scheme: HTTP
            timeoutSeconds: 5
            periodSeconds: 60
          startupProbe:
            httpGet:
              path: /healthz/ready
              port: 5003
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 60
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: 5003
              scheme: HTTP
            timeoutSeconds: 5
            periodSeconds: 60
      volumes:
        
              
        - name: al-config
          configMap:
            name: release-name-global-config
---
# Source: assemblyline/templates/ui.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ui
  labels:
    app: assemblyline
    section: core
    component: ui
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: assemblyline
      section: core
      component: ui
  template:
    metadata:
      annotations:
        checksum/config: e4b6cdeb54d1d645cb5a466d7fd260a406bec616517bff3840f231508e0edb26
      labels:
        app: assemblyline
        section: core
        component: ui
                
        
        
    spec:
      priorityClassName: al-core-priority
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
        - name: ui
          image: cccs/assemblyline-ui:4.6.0.stable3
          imagePullPolicy: IfNotPresent
          
          ports:
            - containerPort: 5000
          env:
                      
            - name: ELASTIC_ALERT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-alert-shards
            - name: ELASTIC_DEFAULT_REPLICAS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-default-replicas
            - name: ELASTIC_DEFAULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-default-shards
            - name: ELASTIC_EMPTYRESULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-emptyresult-shards
            - name: ELASTIC_FILE_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-file-shards
            - name: ELASTIC_FILESCORE_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-filescore-shards
            - name: ELASTIC_RESULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-result-shards
            - name: ELASTIC_SAFELIST_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-safelist-shards
            - name: ELASTIC_SUBMISSION_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-submission-shards
            - name: LOGGING_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: assemblyline-system-passwords
                  key: logging-password
            - name: LOGGING_HOST
              valueFrom:
                configMapKeyRef:
                  name: system-settings
                  key: logging-host
            - name: LOGGING_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: system-settings
                  key: logging-username
            - name: ELASTIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: assemblyline-system-passwords
                  key: datastore-password
            - name: RETROHUNT_API_KEY
              valueFrom:
                secretKeyRef:
                  name: retrohunt-secret
                  key: password
            - name: ENABLE_INTERNAL_ENCRYPTION
              value: "false"
            - name: DISPATCHER_RESULT_THREADS
              value: "6"
            - name: DISPATCHER_FINALIZE_THREADS
              value: "6"
            - name: DEV_MODE
              value: "false"
            
            - name: INTERNAL_FILESTORE_ACCESS
              valueFrom:
                secretKeyRef:
                  name: internal-filestore-keys
                  key: accesskey
            - name: INTERNAL_FILESTORE_KEY
              valueFrom:
                secretKeyRef:
                  name: internal-filestore-keys
                  key: secretkey
            
            
            
            - name: WORKERS
              value: '6'
            - name: WORKER_CONNECTIONS
              value: '2048'
            - name: GRACEFUL_TIMEOUT
              value: '180'
            - name: TIMEOUT
              value: '180'
            - name: FLASK_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: flask-secret
                  key: password
          
          
          
          securityContext:
                        
            
            
          volumeMounts:
                      
            - name: al-config
              mountPath: /etc/assemblyline/config.yml
              subPath: config
              readOnly: true
            
            
            
            
          
          resources:
            limits:
              cpu: 1
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 1Gi
          livenessProbe:
            httpGet:
              path: /healthz/live
              port: 5000
              scheme: HTTP
            timeoutSeconds: 5
            periodSeconds: 60
          startupProbe:
            httpGet:
              path: /healthz/ready
              port: 5000
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 60
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: 5000
              scheme: HTTP
            timeoutSeconds: 5
            periodSeconds: 60
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
---
# Source: assemblyline/templates/ui.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: socketio
  labels:
    app: assemblyline
    section: core
    component: socketio
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: assemblyline
      section: core
      component: socketio
  template:
    metadata:
      annotations:
        checksum/config: e4b6cdeb54d1d645cb5a466d7fd260a406bec616517bff3840f231508e0edb26
      labels:
        app: assemblyline
        section: core
        component: socketio
                
        
        
    spec:
      priorityClassName: al-core-priority
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
        - name: socketio
          image: cccs/assemblyline-socketio:4.6.0.stable3
          imagePullPolicy: IfNotPresent
          
          ports:
            - containerPort: 5002
          env:
                      
            - name: ELASTIC_ALERT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-alert-shards
            - name: ELASTIC_DEFAULT_REPLICAS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-default-replicas
            - name: ELASTIC_DEFAULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-default-shards
            - name: ELASTIC_EMPTYRESULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-emptyresult-shards
            - name: ELASTIC_FILE_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-file-shards
            - name: ELASTIC_FILESCORE_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-filescore-shards
            - name: ELASTIC_RESULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-result-shards
            - name: ELASTIC_SAFELIST_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-safelist-shards
            - name: ELASTIC_SUBMISSION_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-submission-shards
            - name: LOGGING_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: assemblyline-system-passwords
                  key: logging-password
            - name: LOGGING_HOST
              valueFrom:
                configMapKeyRef:
                  name: system-settings
                  key: logging-host
            - name: LOGGING_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: system-settings
                  key: logging-username
            - name: ELASTIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: assemblyline-system-passwords
                  key: datastore-password
            - name: RETROHUNT_API_KEY
              valueFrom:
                secretKeyRef:
                  name: retrohunt-secret
                  key: password
            - name: ENABLE_INTERNAL_ENCRYPTION
              value: "false"
            - name: DISPATCHER_RESULT_THREADS
              value: "6"
            - name: DISPATCHER_FINALIZE_THREADS
              value: "6"
            - name: DEV_MODE
              value: "false"
            
            - name: INTERNAL_FILESTORE_ACCESS
              valueFrom:
                secretKeyRef:
                  name: internal-filestore-keys
                  key: accesskey
            - name: INTERNAL_FILESTORE_KEY
              valueFrom:
                secretKeyRef:
                  name: internal-filestore-keys
                  key: secretkey
            
            
            
            - name: FLASK_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: flask-secret
                  key: password
          
          securityContext:
                        
            
            
          volumeMounts:
                      
            - name: al-config
              mountPath: /etc/assemblyline/config.yml
              subPath: config
              readOnly: true
            
            
            
            
          
          
          resources:
            limits:
              cpu: 1
              memory: 2Gi
            requests:
              cpu: 100m
              memory: 256Mi
          livenessProbe:
            httpGet:
              path: /healthz/live
              port: 5002
              scheme: HTTP
            timeoutSeconds: 5
            periodSeconds: 60
          startupProbe:
            httpGet:
              path: /healthz/ready
              port: 5002
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 60
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: 5002
              scheme: HTTP
            timeoutSeconds: 5
            periodSeconds: 60
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
---
# Source: assemblyline/templates/ui.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    app: assemblyline
    section: core
    component: frontend
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: assemblyline
      section: core
      component: frontend
  template:
    metadata:
      labels:
        app: assemblyline
        section: core
        component: frontend
                
        
        
    spec:
      priorityClassName: al-core-priority
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
        - name: frontend
          image: cccs/assemblyline-ui-frontend:4.6.0.stable3
          imagePullPolicy: IfNotPresent
          
          ports:
            - containerPort: 3000
          resources:
            requests:
              cpu: 50m
              memory: 128Mi
            limits:
              cpu: 1
              memory:  1Gi
          securityContext:
                        
            
            
          volumeMounts:
          
          
      volumes:
---
# Source: assemblyline/templates/updater-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: updater
  labels:
    app: assemblyline
    section: core
    component: updater
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: assemblyline
      section: core
      component: updater
  template:
    metadata:
      annotations:
        checksum/config: e4b6cdeb54d1d645cb5a466d7fd260a406bec616517bff3840f231508e0edb26
      labels:
        app: assemblyline
        section: core
        component: updater
                
        
        
    spec:
      serviceAccountName: release-name-scaling-manager
      priorityClassName: al-core-priority
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
        - name: updater
          image: cccs/assemblyline-core:4.6.0.stable3
          imagePullPolicy: IfNotPresent
          
          command: ['python', '-m', 'assemblyline_core.updater.run_updater']
          
          securityContext:
                        
            
                      
          volumeMounts:
                      
            - name: al-config
              mountPath: /etc/assemblyline/config.yml
              subPath: config
              readOnly: true
            
            
            
            
          env:
                      
            - name: ELASTIC_ALERT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-alert-shards
            - name: ELASTIC_DEFAULT_REPLICAS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-default-replicas
            - name: ELASTIC_DEFAULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-default-shards
            - name: ELASTIC_EMPTYRESULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-emptyresult-shards
            - name: ELASTIC_FILE_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-file-shards
            - name: ELASTIC_FILESCORE_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-filescore-shards
            - name: ELASTIC_RESULT_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-result-shards
            - name: ELASTIC_SAFELIST_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-safelist-shards
            - name: ELASTIC_SUBMISSION_SHARDS
              valueFrom:
                configMapKeyRef:
                  name: elasticsearch-indexes
                  key: elastic-submission-shards
            - name: LOGGING_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: assemblyline-system-passwords
                  key: logging-password
            - name: LOGGING_HOST
              valueFrom:
                configMapKeyRef:
                  name: system-settings
                  key: logging-host
            - name: LOGGING_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: system-settings
                  key: logging-username
            - name: ELASTIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: assemblyline-system-passwords
                  key: datastore-password
            - name: RETROHUNT_API_KEY
              valueFrom:
                secretKeyRef:
                  name: retrohunt-secret
                  key: password
            - name: ENABLE_INTERNAL_ENCRYPTION
              value: "false"
            - name: DISPATCHER_RESULT_THREADS
              value: "6"
            - name: DISPATCHER_FINALIZE_THREADS
              value: "6"
            - name: DEV_MODE
              value: "false"
            
            - name: INTERNAL_FILESTORE_ACCESS
              valueFrom:
                secretKeyRef:
                  name: internal-filestore-keys
                  key: accesskey
            - name: INTERNAL_FILESTORE_KEY
              valueFrom:
                secretKeyRef:
                  name: internal-filestore-keys
                  key: secretkey
            
            
            
            - name: KUBERNETES_AL_CONFIG
              value: release-name-global-config
            - name: RELEASE_NAME
              value: release-name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SERVICE_API_HOST
              value: http://service-server:5003
            - name: PRIVILEGED_SERVICE_ACCOUNT_NAME
              value: default
          livenessProbe:
            exec:
              command: [ "bash", "-c", "if [[ ! `find /tmp/heartbeat -newermt '-30 seconds'` ]]; then false; fi" ]
            initialDelaySeconds: 30
            periodSeconds: 30
          resources:
            limits:
              cpu: 0.5
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 256Mi
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
---
# Source: assemblyline/templates/autoscaler.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: ui-hpa
spec:
  maxReplicas: 15
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ui
  targetCPUUtilizationPercentage: 50
---
# Source: assemblyline/templates/autoscaler.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: ingester-hpa
spec:
  maxReplicas: 10
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ingester
  targetCPUUtilizationPercentage: 50
---
# Source: assemblyline/templates/autoscaler.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: dispatcher-hpa
spec:
  maxReplicas: 15
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: dispatcher
  targetCPUUtilizationPercentage: 70
---
# Source: assemblyline/templates/autoscaler.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: service-server-hpa
spec:
  maxReplicas: 100
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: service-server
  targetCPUUtilizationPercentage: 50
---
# Source: assemblyline/charts/elasticsearch/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch-master
  labels:
    heritage: "Helm"
    release: "release-name"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  annotations:
    esMajorVersion: "7"
spec:
  serviceName: elasticsearch-master-headless
  selector:
    matchLabels:
      app: "elasticsearch-master"
  replicas: 3
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: elasticsearch-master
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 30Gi
  template:
    metadata:
      name: "elasticsearch-master"
      labels:
        release: "release-name"
        chart: "elasticsearch"
        app: "elasticsearch-master"
      annotations:
        
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      automountServiceAccountToken: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - "elasticsearch-master"
            topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 120
      volumes:
      enableServiceLinks: true
      initContainers:
      - name: configure-sysctl
        securityContext:
          runAsUser: 0
          privileged: true
        image: "docker.elastic.co/elasticsearch/elasticsearch:7.17.3"
        imagePullPolicy: "IfNotPresent"
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        resources:
          {}

      containers:
      - name: "elasticsearch"
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1000
        image: "docker.elastic.co/elasticsearch/elasticsearch:7.17.3"
        imagePullPolicy: "IfNotPresent"
        readinessProbe:
          exec:
            command:
              - bash
              - -c
              - |
                set -e
                # If the node is starting up wait for the cluster to be ready (request params: "wait_for_status=green&timeout=1s" )
                # Once it has started only check that the node itself is responding
                START_FILE=/tmp/.es_start_file

                # Disable nss cache to avoid filling dentry cache when calling curl
                # This is required with Elasticsearch Docker using nss < 3.52
                export NSS_SDB_USE_CACHE=no

                http () {
                  local path="${1}"
                  local args="${2}"
                  set -- -XGET -s

                  if [ "$args" != "" ]; then
                    set -- "$@" $args
                  fi

                  if [ -n "${ELASTIC_PASSWORD}" ]; then
                    set -- "$@" -u "elastic:${ELASTIC_PASSWORD}"
                  fi

                  curl --output /dev/null -k "$@" "http://127.0.0.1:9200${path}"
                }

                if [ -f "${START_FILE}" ]; then
                  echo 'Elasticsearch is already running, lets check the node is healthy'
                  HTTP_CODE=$(http "/" "-w %{http_code}")
                  RC=$?
                  if [[ ${RC} -ne 0 ]]; then
                    echo "curl --output /dev/null -k -XGET -s -w '%{http_code}' \${BASIC_AUTH} http://127.0.0.1:9200/ failed with RC ${RC}"
                    exit ${RC}
                  fi
                  # ready if HTTP code 200, 503 is tolerable if ES version is 6.x
                  if [[ ${HTTP_CODE} == "200" ]]; then
                    exit 0
                  elif [[ ${HTTP_CODE} == "503" && "7" == "6" ]]; then
                    exit 0
                  else
                    echo "curl --output /dev/null -k -XGET -s -w '%{http_code}' \${BASIC_AUTH} http://127.0.0.1:9200/ failed with HTTP code ${HTTP_CODE}"
                    exit 1
                  fi

                else
                  echo 'Waiting for elasticsearch cluster to become ready (request params: "wait_for_status=green&timeout=1s" )'
                  if http "/_cluster/health?wait_for_status=green&timeout=1s" "--fail" ; then
                    touch ${START_FILE}
                    exit 0
                  else
                    echo 'Cluster is not yet ready (request params: "wait_for_status=green&timeout=1s" )'
                    exit 1
                  fi
                fi
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 3
          timeoutSeconds: 5
        ports:
        - name: http
          containerPort: 9200
        - name: transport
          containerPort: 9300
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 1000m
            memory: 2Gi
        env:
          - name: node.name
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: cluster.initial_master_nodes
            value: "elasticsearch-master-0,elasticsearch-master-1,elasticsearch-master-2,"
          - name: discovery.seed_hosts
            value: "elasticsearch-master-headless"
          - name: cluster.name
            value: "elasticsearch"
          - name: network.host
            value: "0.0.0.0"
          - name: cluster.deprecation_indexing.enabled
            value: "false"
          - name: node.data
            value: "true"
          - name: node.ingest
            value: "true"
          - name: node.master
            value: "true"
          - name: node.ml
            value: "true"
          - name: node.remote_cluster_client
            value: "true"
        volumeMounts:
          - name: "elasticsearch-master"
            mountPath: /usr/share/elasticsearch/data
---
# Source: assemblyline/charts/filestore/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: filestore
  labels:
    app: filestore
    chart: filestore-5.0.10
    release: release-name
    heritage: Helm
spec:
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: "Parallel"
  serviceName: filestore-svc
  replicas: 16
  selector:
    matchLabels:
      app: filestore
      release: release-name
  template:
    metadata:
      name: filestore
      labels:
        app: filestore
        release: release-name
        component: filestore
        section: core
      annotations:
        checksum/secrets: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/config: c3f333f1e0fba40916bba325400fa0ca6a220088894df2a7227f37874454bbb6
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
      serviceAccountName: minio-sa
      containers:
        - name: filestore
          image: quay.io/minio/minio:RELEASE.2023-05-18T00-05-36Z
          imagePullPolicy: IfNotPresent
          command: [
            "/bin/sh",
            "-ce",
            "/usr/bin/docker-entrypoint.sh minio server  http://filestore-{0...15}.filestore-svc.default.svc.cluster.local/export -S /etc/minio/certs/ --address :9000 --console-address :9001"
          ]
          volumeMounts:
            - name: export
              mountPath: /export            
          ports:
            - name: http
              containerPort: 9000
            - name: http-console
              containerPort: 9001
          env:
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: internal-filestore-keys
                  key: rootUser
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: internal-filestore-keys
                  key: rootPassword
            - name: MINIO_PROMETHEUS_AUTH_TYPE
              value: "public"
          resources:
            requests:
              memory: 16Gi      
      volumes:
        - name: minio-user
          secret:
            secretName: internal-filestore-keys        
  volumeClaimTemplates:
    - metadata:
        name: export
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 500Gi
---
# Source: assemblyline/templates/elastic-helper-statefulsets.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elastic-helper
spec:
  selector:
    matchLabels:
      app: assemblyline
      section: core
      component: elastic-helper
  serviceName: elastic-helper
  replicas: 1
  template:
    metadata:
      labels:
        app: assemblyline
        section: core
        component: elastic-helper
                
        
        
    spec:
      terminationGracePeriodSeconds: 10
      serviceAccountName: default
      priorityClassName: al-infra
      securityContext:
                
        
        
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: elastic-helper
        image: cccs/assemblyline-ui:4.6.0.stable3
        command: ["python",  "/mount/share_certificate.py"]
        securityContext:
                    
          
          
        ports:
        - containerPort: 8000
        env:
          - name: SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: elastic-helper-secret
                key: password
        volumeMounts:
        - name: certificate-data
          mountPath: /data/
        - name: script-volume
          mountPath: /mount
        resources:
          limits:
            cpu: 250m
            memory: 256Mi
          requests:
            cpu: 25m
            memory: 32Mi
      initContainers:
      - name: create-certs
        image: :8.10.2
        command: [ 'bash', '-c', "if [ ! -f /data/elastic-certificates.p12 ]; then mkdir /tmp/certs/ && elasticsearch-certutil ca --out /tmp/certs/elastic-stack-ca.p12 --pass '' && elasticsearch-certutil cert --name security-master --dns security-master --ca /tmp/certs/elastic-stack-ca.p12 --pass '' --ca-pass '' --out /tmp/certs/elastic-certificates.p12 && mv -n /tmp/certs/* /data/; ls -la /data/; fi" ]
        securityContext:
                    
          
          
        resources:
          limits:
            cpu: 250m
            memory: 256Mi
          requests:
            cpu: 25m
            memory: 32Mi
        volumeMounts:
          - name: certificate-data
            mountPath: /data/
          - name: script-volume
            mountPath: /mount/
      volumes:
        - name: script-volume
          configMap:
            name: release-name-bootstrap-script
            items:
              - key: share_certificate.py
                path: share_certificate.py
  volumeClaimTemplates:
  - metadata:
      name: certificate-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: 
      resources:
        requests:
          storage: 1Gi
---
# Source: assemblyline/templates/redis.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-persistent
spec:
  selector:
    matchLabels:
      app: assemblyline
      section: core
      component: redis-persistent
  serviceName: redis-persistent
  replicas: 1
  template:
    metadata:
      labels:
        app: assemblyline
        section: core
        component: redis-persistent
                
        
        
    spec:
      terminationGracePeriodSeconds: 10
      priorityClassName: al-infra
      affinity:
        nodeAffinity:
                    
          
          
      securityContext:
        fsGroup: 1000
      tolerations:
                
        
        
      containers:
      - name: redis
        image: redis
        command: ['redis-server']
        securityContext:
                      
            
                    
        args: ['--appendonly', 'yes', '--maxclients', '100000', '--auto-aof-rewrite-percentage', '200' ]
        ports:
        - containerPort: 6379
        readinessProbe:
          exec:
            command: ['bash', '-c', 'if [ "$(timeout 3s redis-cli ping)" != "PONG" ]; then exit 1; fi']
          timeoutSeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: redis-data
          mountPath: /var/opt/redislabs/
        - name: redis-data
          mountPath: /data
        
        resources:
          limits:
            cpu: 1
            memory: 8Gi
          requests:
            cpu: 500m
            memory: 1Gi
      
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: local-path
      resources:
        requests:
          storage: 20Gi
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: bootstrap-admin-account
  labels:
    section: core
spec:
  template:
    metadata:
      labels:
        app: assemblyline
        section: core
        component: bootstrap
                
        
        
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: pi
        image: cccs/assemblyline-core:4.6.0.stable3
        securityContext:
                    
          
          
        command: ["python",  "/mount/bootstrap.py"]
        env:
          - name: INITIAL_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: initial-admin-password
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: FILESTORE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: filestore-password
        volumeMounts:
                    
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
          - name: script-volume
            mountPath: /mount
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
      volumes:
               
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
        - name: script-volume
          configMap:
            name: release-name-bootstrap-script
            items:
              - key: bootstrap.py
                path: bootstrap.py
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
#
#   Launch services so that they auto-install
#

apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-apivector
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_apivector
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-apivector
        image: cccs/assemblyline-service-apivector:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-apkaye
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_apkaye
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-apkaye
        image: cccs/assemblyline-service-apkaye:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-antivirus
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_antivirus
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-antivirus
        image: cccs/assemblyline-service-antivirus:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-batchdeobfuscator
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_batchdeobfuscator
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-batchdeobfuscator
        image: cccs/assemblyline-service-batchdeobfuscator:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-cape
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_cape
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-cape
        image: cccs/assemblyline-service-cape:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-characterize
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_characterize
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-characterize
        image: cccs/assemblyline-service-characterize:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-configextractor
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_configextractor
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-configextractor
        image: cccs/assemblyline-service-configextractor:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-deobfuscripter
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_deobfuscripter
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-deobfuscripter
        image: cccs/assemblyline-service-deobfuscripter:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-elf
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_elf
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-elf
        image: cccs/assemblyline-service-elf:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-elfparser
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_elfparser
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-elfparser
        image: cccs/assemblyline-service-elfparser:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-emlparser
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_emlparser
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-emlparser
        image: cccs/assemblyline-service-emlparser:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-espresso
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_espresso
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-espresso
        image: cccs/assemblyline-service-espresso:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-extract
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_extract
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-extract
        image: cccs/assemblyline-service-extract:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-floss
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_floss
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-floss
        image: cccs/assemblyline-service-floss:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-frankenstrings
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_frankenstrings
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-frankenstrings
        image: cccs/assemblyline-service-frankenstrings:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-iparse
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_iparse
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-iparse
        image: cccs/assemblyline-service-iparse:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-jsjaws
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_jsjaws
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-jsjaws
        image: cccs/assemblyline-service-jsjaws:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-metadefender
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_metadefender
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-metadefender
        image: cccs/assemblyline-service-metadefender:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-metapeek
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_metapeek
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-metapeek
        image: cccs/assemblyline-service-metapeek:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-oletools
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_oletools
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-oletools
        image: cccs/assemblyline-service-oletools:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-overpower
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_overpower
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-overpower
        image: cccs/assemblyline-service-overpower:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-pdfid
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_pdfid
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-pdfid
        image: cccs/assemblyline-service-pdfid:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-peepdf
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_peepdf
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-peepdf
        image: cccs/assemblyline-service-peepdf:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-pe
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_pe
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-pe
        image: cccs/assemblyline-service-pe:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-pixaxe
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_pixaxe
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-pixaxe
        image: cccs/assemblyline-service-pixaxe:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-safelist
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_safelist
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-safelist
        image: cccs/assemblyline-service-safelist:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-sigma
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_sigma
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-sigma
        image: cccs/assemblyline-service-sigma:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-suricata
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_suricata
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-suricata
        image: cccs/assemblyline-service-suricata:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-swiffer
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_swiffer
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-swiffer
        image: cccs/assemblyline-service-swiffer:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-tagcheck
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_tagcheck
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-tagcheck
        image: cccs/assemblyline-service-tagcheck:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-torrentslicer
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_torrentslicer
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-torrentslicer
        image: cccs/assemblyline-service-torrentslicer:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-unpacme
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_unpacme
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-unpacme
        image: cccs/assemblyline-service-unpacme:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-unpacker
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_unpacker
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-unpacker
        image: cccs/assemblyline-service-unpacker:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-urldownloader
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_urldownloader
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-urldownloader
        image: cccs/assemblyline-service-urldownloader:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-vipermonkey
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_vipermonkey
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-vipermonkey
        image: cccs/assemblyline-service-vipermonkey:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-virustotal
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_virustotal
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-virustotal
        image: cccs/assemblyline-service-virustotal:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-xlmmacrodeobfuscator
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_xlmmacrodeobfuscator
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-xlmmacrodeobfuscator
        image: cccs/assemblyline-service-xlmmacrodeobfuscator:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-yara
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_yara
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-yara
        image: cccs/assemblyline-service-yara:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/jobs.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: install-alsvc-zeek
  labels:
    app: assemblyline-release-name
    section: service
spec:
  template:
    metadata:
      labels:
        app: assemblyline-release-name
        section: service
        privilege: core
        component: alsvc_zeek
    spec:
      serviceAccountName: default
      affinity:
        nodeAffinity:
                    
          
          
      tolerations:
                
        
        
      containers:
      - name: install-alsvc-zeek
        image: cccs/assemblyline-service-zeek:4.5.stable
        securityContext:
                    
          
          
        imagePullPolicy: Always
        env:
          - name: PRIVILEGED
            value: "true"
          - name: REGISTER_ONLY
            value: 'True'
                  
          - name: ELASTIC_ALERT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-alert-shards
          - name: ELASTIC_DEFAULT_REPLICAS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-replicas
          - name: ELASTIC_DEFAULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-default-shards
          - name: ELASTIC_EMPTYRESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-emptyresult-shards
          - name: ELASTIC_FILE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-file-shards
          - name: ELASTIC_FILESCORE_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-filescore-shards
          - name: ELASTIC_RESULT_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-result-shards
          - name: ELASTIC_SAFELIST_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-safelist-shards
          - name: ELASTIC_SUBMISSION_SHARDS
            valueFrom:
              configMapKeyRef:
                name: elasticsearch-indexes
                key: elastic-submission-shards
          - name: LOGGING_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: logging-password
          - name: LOGGING_HOST
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-host
          - name: LOGGING_USERNAME
            valueFrom:
              configMapKeyRef:
                name: system-settings
                key: logging-username
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: assemblyline-system-passwords
                key: datastore-password
          - name: RETROHUNT_API_KEY
            valueFrom:
              secretKeyRef:
                name: retrohunt-secret
                key: password
          - name: ENABLE_INTERNAL_ENCRYPTION
            value: "false"
          - name: DISPATCHER_RESULT_THREADS
            value: "6"
          - name: DISPATCHER_FINALIZE_THREADS
            value: "6"
          - name: DEV_MODE
            value: "false"
          
          - name: INTERNAL_FILESTORE_ACCESS
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: accesskey
          - name: INTERNAL_FILESTORE_KEY
            valueFrom:
              secretKeyRef:
                name: internal-filestore-keys
                key: secretkey
          
          
          
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 1Gi
        volumeMounts:
                  
          - name: al-config
            mountPath: /etc/assemblyline/config.yml
            subPath: config
            readOnly: true
          
          
          
          
      volumes:
              
        - name: al-config
          configMap:
            name: release-name-global-config
        
        
        
        
      restartPolicy: Never
  backoffLimit: 500
  ttlSecondsAfterFinished: 300
---
# Source: assemblyline/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-ingress
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    kubernetes.io/ingress.class: "nginx"
spec:

  tls:
    - hosts: [al.codepretzels.com]
      secretName:  assemblyline-tls 
  rules:
    - host:  al.codepretzels.com 
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend
                port:
                  number: 3000
          - path: /socket.io/
            pathType: ImplementationSpecific
            backend:
              service:
                name: socketio
                port:
                  number: 5002
          - path: /api/
            pathType: Prefix
            backend:
              service:
                name: ui
                port:
                  number: 5000
          
          
          - path: /kibana/
            pathType: Prefix
            backend:
              service:
                name: kibana
                port:
                  number: 5601
---
# Source: assemblyline/templates/configmaps.yaml
# [s3://${INTERNAL_FILESTORE_ACCESS}:${INTERNAL_FILESTORE_KEY}@filestore:9000?s3_bucket=al-cache&use_ssl=False]
# [s3://${INTERNAL_FILESTORE_ACCESS}:${INTERNAL_FILESTORE_KEY}@filestore:9000?s3_bucket=al-storage&use_ssl=False]
---
# Source: assemblyline/templates/logstash-configmaps.yaml
#   processors:
#     - drop_event:
#         when:
#           or:
#             - regexp:
#                 container.labels.io_kubernetes_container_name: "(nginx-ingress-controller)|(tunnel-front)"
#             - equals:
#                 kubernetes.namespace: kube-system
---
# Source: assemblyline/charts/elasticsearch/templates/test/test-elasticsearch-health.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-rligb-test"
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  securityContext:
    fsGroup: 1000
    runAsUser: 1000
  containers:
  - name: "release-name-zdagm-test"
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.17.3"
    imagePullPolicy: "IfNotPresent"
    command:
      - "sh"
      - "-c"
      - |
        #!/usr/bin/env bash -e
        curl -XGET --fail 'elasticsearch-master:9200/_cluster/health?wait_for_status=green&timeout=1s'
  restartPolicy: Never
---
# Source: assemblyline/charts/filestore/templates/post-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: filestore-post-job
  labels:
    app: filestore-post-job
    chart: filestore-5.0.10
    release: release-name
    heritage: Helm
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  template:
    metadata:
      labels:
        app: filestore-job
        release: release-name
        component: filestore
        section: core
    spec:
      restartPolicy: OnFailure      
      volumes:
        - name: etc-path
          emptyDir: {}
        - name: minio-configuration
          projected:
            sources:
              - configMap:
                  name: filestore
              - secret:
                  name: internal-filestore-keys
      serviceAccountName: minio-sa
      containers:
        - name: minio-make-user
          image: "quay.io/minio/mc:RELEASE.2023-05-18T16-59-00Z"
          imagePullPolicy: IfNotPresent
          command: [ "/bin/sh", "/config/add-user" ]
          env:
            - name: MINIO_ENDPOINT
              value: filestore
            - name: MINIO_PORT
              value: "9000"
          volumeMounts:
            - name: etc-path
              mountPath: /etc/minio
            - name: minio-configuration
              mountPath: /config
          resources:
            requests:
              memory: 128Mi
