name: CI/CD for Python App to AWS ECR

permissions:
  id-token: write
  contents: read

on:
  push:
    paths:
      - "apps/demoapp/**"
      - ".github/workflows/ci-ecr-deploy.yml"
    branches:
      - main

  pull_request:
    paths:
      - "apps/demoapp/**"
      - ".github/workflows/ci-ecr-deploy.yml"
    branches:
      - main

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPO_NAME: ${{ secrets.ECR_REPO_NAME }}
  ROLE_TO_ASSUME: ${{ secrets.ROLE_TO_ASSUME }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-test-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          cd apps/demoapp
          pip install -r requirements.txt

      - name: Run tests (optional)
        run: |
          cd apps/demoapp
          pytest || echo "No tests yet"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ env.ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $ECR_REGISTRY/${{ env.ECR_REPO_NAME }}:${{ env.IMAGE_TAG }} ./apps/demoapp
          docker push $ECR_REGISTRY/${{ env.ECR_REPO_NAME }}:${{ env.IMAGE_TAG }}

      - name: Update deployment image and push to Git
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git checkout main
          git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}

          sed -i "s|^\s*image:.*|image: $ECR_REGISTRY/${{ env.ECR_REPO_NAME }}:${{ env.IMAGE_TAG }}|" apps/demoapp/deployment.yml
          git add apps/demoapp/deployment.yml

          git commit -m "Force update demoapp image to ${{ env.IMAGE_TAG }}" || echo "No changes to commit"
          git push origin main || echo "Nothing to push"
